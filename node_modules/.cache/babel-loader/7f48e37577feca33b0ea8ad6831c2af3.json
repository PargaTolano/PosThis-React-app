{"ast":null,"code":"import{emailRegex,userNameRegex,passwordRegex,tagRegex}from'_utils';var validateLogin=function validateLogin(_ref){var userName=_ref.userName,password=_ref.password;var validation={userName:true,password:true,validated:true};if(!passwordRegex.test(password||'')){validation.password=false;validation.validated=false;}if(!(emailRegex.test(userName||'')||userNameRegex.test(userName||''))){validation.userName=false;validation.validated=false;}return validation;};var validateSignup=function validateSignup(_ref2){var userName=_ref2.userName,tag=_ref2.tag,email=_ref2.email,password=_ref2.password;var validation={userName:true,tag:true,email:true,password:true,validated:true};if(!userNameRegex.test(userName||'')){validation.userName=false;validation.validated=false;}if(!tagRegex.test(tag||'')){validation.tag=false;validation.validated=false;}if(!emailRegex.test(email||'')){validation.email=false;validation.validated=false;}if(!passwordRegex.test(password||'')){validation.password=false;validation.validated=false;}return validation;};var validateUpdateUser=function validateUpdateUser(_ref3){var userName=_ref3.userName,tag=_ref3.tag,email=_ref3.email;var validation={userName:true,tag:true,email:true,validated:true};if(!userNameRegex.test(userName||'')){validation.userName=false;validation.validated=false;}if(!tagRegex.test(tag||'')){validation.tag=false;validation.validated=false;}if(!emailRegex.test(email||'')){validation.email=false;validation.validated=false;}return validation;};var validateCreateAndUpdatePost=function validateCreateAndUpdatePost(_ref4){var content=_ref4.content,mediaCount=_ref4.mediaCount;var validation={content:true,mediaCount:true,validated:true};if(content.length===0){validation.content=false;}if(mediaCount===0){validation.mediaCount=false;}validation.validated=validation.content||validation.mediaCount;return validation;};export{validateLogin,validateSignup,validateUpdateUser,validateCreateAndUpdatePost};","map":{"version":3,"sources":["D:/Repositories/Visual C++/PosThis-React-app/src/_utils/validation.js"],"names":["emailRegex","userNameRegex","passwordRegex","tagRegex","validateLogin","userName","password","validation","validated","test","validateSignup","tag","email","validateUpdateUser","validateCreateAndUpdatePost","content","mediaCount","length"],"mappings":"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","sourcesContent":["import { emailRegex, userNameRegex, passwordRegex, tagRegex } from '_utils';\r\n\r\nconst validateLogin = ({userName, password})=>{\r\n\r\n    const validation = {\r\n        userName:   true,\r\n        password:   true,\r\n        validated:  true\r\n    };\r\n\r\n    if ( !passwordRegex .test( password || '' ) ){\r\n        validation.password = false;\r\n        validation.validated = false;\r\n    }\r\n     \r\n\r\n    if ( !( emailRegex.test( userName || '' ) || userNameRegex.test( userName || '' ) ) ){\r\n        validation.userName = false;\r\n        validation.validated = false;\r\n    }\r\n    \r\n    return validation;\r\n};\r\n\r\nconst validateSignup = ( {userName, tag, email, password} ) =>{\r\n\r\n    const validation = {\r\n        userName:   true,\r\n        tag:        true,\r\n        email:      true,\r\n        password:   true,\r\n        validated:  true,\r\n    };\r\n\r\n    if ( !userNameRegex .test( userName || '' ) ){\r\n        validation.userName     = false;\r\n        validation.validated    = false;\r\n    }\r\n\r\n    if ( !tagRegex .test( tag || '' ) ){\r\n        validation.tag          = false;\r\n        validation.validated    = false;\r\n    }       \r\n\r\n    if ( !emailRegex .test( email || '' ) ){\r\n        validation.email        = false;\r\n        validation.validated    = false;\r\n    }\r\n\r\n    if ( !passwordRegex .test( password || '' ) ){\r\n        validation.password     = false;\r\n        validation.validated    = false;\r\n    }\r\n    \r\n    return validation;\r\n};\r\n\r\nconst validateUpdateUser = ( {userName, tag, email} ) =>{\r\n\r\n    const validation = {\r\n        userName:   true,\r\n        tag:        true,\r\n        email:      true,\r\n        validated:  true,\r\n    };\r\n\r\n    if ( !userNameRegex .test( userName || '' ) ){\r\n        validation.userName     = false;\r\n        validation.validated    = false;\r\n    }\r\n\r\n    if ( !tagRegex .test( tag || '' ) ){\r\n        validation.tag          = false;\r\n        validation.validated    = false;\r\n    }       \r\n\r\n    if ( !emailRegex .test( email || '' ) ){\r\n        validation.email        = false;\r\n        validation.validated    = false;\r\n    }\r\n    \r\n    return validation;\r\n};\r\n\r\nconst validateCreateAndUpdatePost = ( {content, mediaCount} )=>{\r\n\r\n    const validation = {\r\n        content:    true,\r\n        mediaCount: true,\r\n        validated:  true\r\n    };\r\n\r\n    if( content.length === 0 ){\r\n        validation.content = false;\r\n    }\r\n\r\n    if( mediaCount === 0 ){\r\n        validation.mediaCount = false;\r\n    }\r\n\r\n    validation.validated = validation.content || validation.mediaCount;\r\n\r\n    return validation;\r\n};\r\n\r\nexport{\r\n    validateLogin,\r\n    validateSignup,\r\n    validateUpdateUser,\r\n    validateCreateAndUpdatePost\r\n}"]},"metadata":{},"sourceType":"module"}