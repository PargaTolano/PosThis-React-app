{"ast":null,"code":"import _slicedToArray from\"D:/Repositories/Visual C++/PosThis-React-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"D:/Repositories/Visual C++/PosThis-React-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"D:/Repositories/Visual C++/PosThis-React-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{Children,cloneElement}from'react';import{withStyles}from'@material-ui/core/styles';import{Dialog,DialogTitle as MuiDialogTitle,DialogContent as MuiDialogContent,DialogActions as MuiDialogActions,IconButton,Typography}from'@material-ui/core';import{Close as CloseIcon,Settings as SettingsIcon}from'@material-ui/icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles=function styles(theme){return{root:{margin:0,padding:theme.spacing(2)},closeButton:{position:'absolute',right:theme.spacing(1),top:theme.spacing(1),color:theme.palette.grey[500]}};};var DialogTitle=withStyles(styles)(function(props){var children=props.children,classes=props.classes,onClose=props.onClose,other=_objectWithoutProperties(props,[\"children\",\"classes\",\"onClose\"]);return/*#__PURE__*/_jsxs(MuiDialogTitle,_objectSpread(_objectSpread({disableTypography:true,className:classes.root},other),{},{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:children}),onClose?/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"close\",className:classes.closeButton,onClick:onClose,children:/*#__PURE__*/_jsx(CloseIcon,{})}):null]}));});var DialogContent=withStyles(function(theme){return{root:{padding:theme.spacing(2)}};})(MuiDialogContent);var DialogActions=withStyles(function(theme){return{root:{margin:0,padding:theme.spacing(1)}};})(MuiDialogActions);export var DialogEditInfo=function DialogEditInfo(_ref){var children=_ref.children,color=_ref.color;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};var childrenWithProps=Children.map(children,function(child,index){return/*#__PURE__*/cloneElement(child,{handleClose:handleClose});});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"upload picture\",component:\"span\",variant:\"contained\",color:color||'secondary',onClick:handleClickOpen,children:/*#__PURE__*/_jsx(SettingsIcon,{})}),/*#__PURE__*/_jsx(Dialog,{onClose:handleClose,\"aria-labelledby\":\"customized-dialog-title\",open:open,children:/*#__PURE__*/_jsx(DialogContent,{dividers:true,children:childrenWithProps})})]});};export default DialogEditInfo;","map":{"version":3,"sources":["D:/Repositories/Visual C++/PosThis-React-app/src/components/EditProfile/DialogEditInfo.js"],"names":["React","Children","cloneElement","withStyles","Dialog","DialogTitle","MuiDialogTitle","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","IconButton","Typography","Close","CloseIcon","Settings","SettingsIcon","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","DialogEditInfo","useState","open","setOpen","handleClickOpen","handleClose","childrenWithProps","map","child","index"],"mappings":"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","sourcesContent":["import React,{ Children, cloneElement } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Dialog,\r\n  DialogTitle as MuiDialogTitle,\r\n  DialogContent as MuiDialogContent,\r\n  DialogActions as MuiDialogActions,\r\n  IconButton,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  Close as CloseIcon,\r\n  Settings as SettingsIcon\r\n} from '@material-ui/icons';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  \r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h6'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label='close' className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport const DialogEditInfo = ({children, color}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const childrenWithProps = Children.map(children, (child, index) => {\r\n    return cloneElement(child, {\r\n      handleClose,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <IconButton  \r\n          aria-label='upload picture'\r\n          component ='span' \r\n          variant   ='contained' \r\n          color     ={ color || 'secondary' } \r\n          onClick   ={handleClickOpen}>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n      <Dialog onClose={handleClose} aria-labelledby='customized-dialog-title' open={open}>\r\n        <DialogContent dividers>\r\n            {childrenWithProps}\r\n        </DialogContent>\r\n        \r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogEditInfo"]},"metadata":{},"sourceType":"module"}