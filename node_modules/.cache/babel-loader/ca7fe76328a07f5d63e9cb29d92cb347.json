{"ast":null,"code":"import _createForOfIteratorHelper from\"D:/Repositories/Visual C++/PosThis-React-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _objectSpread from\"D:/Repositories/Visual C++/PosThis-React-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:/Repositories/Visual C++/PosThis-React-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Repositories/Visual C++/PosThis-React-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{getURL}from'_config';import{authHeader}from'_helpers';import{authenticationService}from'_services';var getPosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=getURL('api/post/Get');return _context.abrupt(\"return\",fetch(url));case 2:case\"end\":return _context.stop();}}},_callee);}));return function getPosts(){return _ref.apply(this,arguments);};}();var getPost=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id){var headers,options;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:headers=_objectSpread(_objectSpread({},authHeader()),{},{'UserID':authenticationService.currentUserValue.id});options={headers:headers};return _context2.abrupt(\"return\",fetch(getURL(\"api/post/Get/\".concat(id)),options));case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function getPost(_x){return _ref2.apply(this,arguments);};}();/**\r\n * @param {CPostModel} model\r\n */var createPost=function createPost(model){var headers=_objectSpread({},authHeader());var fd=new FormData();fd.append('userID',model.userID);fd.append('Content',model.content);var _iterator=_createForOfIteratorHelper(model.files),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var file=_step.value;fd.append('Files',file);}}catch(err){_iterator.e(err);}finally{_iterator.f();};var options={method:'POST',body:fd,headers:headers};return fetch(getURL(\"api/post/Create\"),options);};/**\r\n * @param {Number} id \r\n * @param {Object} model\r\n */var updatePost=function updatePost(id,model){var headers=_objectSpread({},authHeader());var fd=new FormData();fd.append('Content',model.content);var _iterator2=_createForOfIteratorHelper(model.deleted),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _id=_step2.value;fd.append('Deleted',_id);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}var _iterator3=_createForOfIteratorHelper(model.files),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var file=_step3.value;fd.append('Files',file);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}var options={method:'PUT',body:fd,headers:headers};return fetch(getURL(\"api/post/Update/\".concat(id)),options);};/**\r\n * @param   {Number} id\r\n */var deletePost=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){var options;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:options={method:'DELETE',headers:authHeader()};return _context3.abrupt(\"return\",fetch(getURL(\"api/post/Delete/\".concat(id)),options));case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function deletePost(_x2){return _ref3.apply(this,arguments);};}();export{getPosts,getPost,createPost,updatePost,deletePost};","map":{"version":3,"sources":["D:/Repositories/Visual C++/PosThis-React-app/src/_api/posts.js"],"names":["getURL","authHeader","authenticationService","getPosts","url","fetch","getPost","id","headers","currentUserValue","options","createPost","model","fd","FormData","append","userID","content","files","file","method","body","updatePost","deleted","deletePost"],"mappings":"gqBAAA,OAAUA,MAAV,KAAsC,SAAtC,CACA,OAASC,UAAT,KAAsC,UAAtC,CACA,OAASC,qBAAT,KAAsC,WAAtC,CAEA,GAAMC,CAAAA,QAAQ,0FAAG,2IACPC,GADO,CACDJ,MAAM,CAAE,cAAF,CADL,iCAENK,KAAK,CAAED,GAAF,CAFC,wDAAH,kBAARD,CAAAA,QAAQ,0CAAd,CAKA,GAAMG,CAAAA,OAAO,2FAAG,kBAAQC,EAAR,0IAENC,OAFM,gCAGLP,UAAU,EAHL,MAIR,SAAUC,qBAAqB,CAACO,gBAAtB,CAAuCF,EAJzC,GAONG,OAPM,CAOI,CACZF,OAAO,CAAPA,OADY,CAPJ,kCAWLH,KAAK,CAAEL,MAAM,wBAAkBO,EAAlB,EAAR,CAAkCG,OAAlC,CAXA,0DAAH,kBAAPJ,CAAAA,OAAO,6CAAb,CAcA;AACA;AACA,GACA,GAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAEC,KAAF,CAAa,CAE5B,GAAMJ,CAAAA,OAAO,kBACNP,UAAU,EADJ,CAAb,CAIA,GAAIY,CAAAA,EAAE,CAAG,GAAIC,CAAAA,QAAJ,EAAT,CAEAD,EAAE,CAACE,MAAH,CAAW,QAAX,CAAsBH,KAAK,CAACI,MAA5B,EACAH,EAAE,CAACE,MAAH,CAAW,SAAX,CAAsBH,KAAK,CAACK,OAA5B,EAT4B,yCAUXL,KAAK,CAACM,KAVK,YAU5B,+CAA8B,IAArBC,CAAAA,IAAqB,aAC1BN,EAAE,CAACE,MAAH,CAAU,OAAV,CAAmBI,IAAnB,EACH,CAZ2B,qDAY3B,CAED,GAAMT,CAAAA,OAAO,CAAG,CACZU,MAAM,CAAE,MADI,CAEZC,IAAI,CAAER,EAFM,CAGZL,OAAO,CAAPA,OAHY,CAAhB,CAMA,MAAOH,CAAAA,KAAK,CAAEL,MAAM,mBAAR,CAA+BU,OAA/B,CAAZ,CACH,CArBD,CAuBA;AACA;AACA;AACA,GACA,GAAMY,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAEf,EAAF,CAAMK,KAAN,CAAgB,CAE/B,GAAMJ,CAAAA,OAAO,kBACNP,UAAU,EADJ,CAAb,CAIA,GAAIY,CAAAA,EAAE,CAAG,GAAIC,CAAAA,QAAJ,EAAT,CAEAD,EAAE,CAACE,MAAH,CAAU,SAAV,CAAqBH,KAAK,CAACK,OAA3B,EAR+B,0CAUhBL,KAAK,CAACW,OAVU,aAU/B,kDAA6B,IAApBhB,CAAAA,GAAoB,cACzBM,EAAE,CAACE,MAAH,CAAU,SAAV,CAAqBR,GAArB,EACH,CAZ8B,iGAcdK,KAAK,CAACM,KAdQ,aAc/B,kDAA6B,IAApBC,CAAAA,IAAoB,cACzBN,EAAE,CAACE,MAAH,CAAU,OAAV,CAAmBI,IAAnB,EACH,CAhB8B,uDAkB/B,GAAMT,CAAAA,OAAO,CAAG,CACZU,MAAM,CAAE,KADI,CAEZC,IAAI,CAAER,EAFM,CAGZL,OAAO,CAAEA,OAHG,CAAhB,CAMA,MAAOH,CAAAA,KAAK,CAAEL,MAAM,2BAAqBO,EAArB,EAAR,CAAqCG,OAArC,CAAZ,CACH,CAzBD,CA2BA;AACA;AACA,GACA,GAAMc,CAAAA,UAAU,2FAAG,kBAAQjB,EAAR,kIACTG,OADS,CACC,CACZU,MAAM,CAAE,QADI,CAEZZ,OAAO,CAAEP,UAAU,EAFP,CADD,kCAMRI,KAAK,CAAEL,MAAM,2BAAqBO,EAArB,EAAR,CAAqCG,OAArC,CANG,0DAAH,kBAAVc,CAAAA,UAAU,8CAAhB,CASA,OACIrB,QADJ,CAEIG,OAFJ,CAGIK,UAHJ,CAIIW,UAJJ,CAKIE,UALJ","sourcesContent":["import {  getURL  }              from '_config';\r\nimport { authHeader }            from '_helpers';\r\nimport { authenticationService } from '_services';\r\n\r\nconst getPosts = async () => {\r\n    const url = getURL( 'api/post/Get' );\r\n    return fetch( url );\r\n}\r\n\r\nconst getPost = async ( id ) => {\r\n\r\n    const headers = {\r\n        ...authHeader(),\r\n        'UserID': authenticationService.currentUserValue.id\r\n    }\r\n\r\n    const options = { \r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/post/Get/${id}` ), options );\r\n};\r\n\r\n/**\r\n * @param {CPostModel} model\r\n */\r\nconst createPost = ( model ) => {\r\n\r\n    const headers = {\r\n        ...authHeader()\r\n    };\r\n\r\n    let fd = new FormData();\r\n    \r\n    fd.append( 'userID',  model.userID  );\r\n    fd.append( 'Content', model.content );\r\n    for( let file of model.files ){\r\n        fd.append('Files', file );\r\n    };\r\n\r\n    const options = {\r\n        method: 'POST',\r\n        body: fd,\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/post/Create` ), options );\r\n};\r\n\r\n/**\r\n * @param {Number} id \r\n * @param {Object} model\r\n */\r\nconst updatePost = ( id, model ) =>{\r\n\r\n    const headers = {\r\n        ...authHeader()\r\n    };\r\n\r\n    let fd = new FormData();\r\n\r\n    fd.append('Content', model.content);\r\n\r\n    for( let id of model.deleted){\r\n        fd.append('Deleted', id);\r\n    }\r\n\r\n    for( let file of model.files){\r\n        fd.append('Files', file);   \r\n    }\r\n\r\n    const options = {\r\n        method: 'PUT',\r\n        body: fd,\r\n        headers: headers\r\n    };\r\n\r\n    return fetch( getURL( `api/post/Update/${id}` ), options );\r\n};\r\n\r\n/**\r\n * @param   {Number} id\r\n */\r\nconst deletePost = async ( id ) =>{\r\n    const options = {\r\n        method: 'DELETE',\r\n        headers: authHeader()\r\n    };\r\n    \r\n    return fetch( getURL( `api/post/Delete/${id}` ), options );\r\n};\r\n\r\nexport{\r\n    getPosts,\r\n    getPost,\r\n    createPost,\r\n    updatePost,\r\n    deletePost\r\n}"]},"metadata":{},"sourceType":"module"}