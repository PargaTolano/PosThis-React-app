{"ast":null,"code":"import React from'react';import{makeStyles}from'@material-ui/core/styles';import{IconButton}from'@material-ui/core';import{Cancel as CancelIcon}from'@material-ui/icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{previewGrid:{display:'flex',width:'100%',justifyContent:'center',flexWrap:'wrap',borderRadius:'10px',boxShadow:'black 0px 0px 2px',overflow:'hidden'},previewContainer:{display:'inline-block',flexGrow:'1',width:'50%',height:'180px'},previewImage:{postion:'absolute',top:'0',left:'0',display:'inline-block',width:'100%',height:'100%',objectFit:'cover'},closePreviewIcon:{position:'absolute',zIndex:1,root:{'&:hover $icon':{color:'blue'}}}};});var GridImage=function GridImage(props){var classes=props.classes,image=props.image,index=props.index,images=props.images,setImages=props.setImages;var preview=image.preview,file=image.file;var deleteImage=function deleteImage(){var i=images.indexOf(image);setImages(function(x){return x.filter(function(elem,index){return index!=i;});});};return/*#__PURE__*/_jsxs(\"div\",{className:classes.previewContainer,children:[/*#__PURE__*/_jsx(IconButton,{className:classes.closePreviewIcon,color:\"secondary\",\"aria-label\":\"upload picture\",component:\"span\",onClick:deleteImage,children:/*#__PURE__*/_jsx(CancelIcon,{})}),/*#__PURE__*/_jsx(\"img\",{src:preview,className:classes.previewImage})]});};export var FormMediaGrid=function FormMediaGrid(props){var classes=useStyles();var images=props.images,setImages=props.setImages;return/*#__PURE__*/_jsx(\"div\",{className:classes.previewGrid,children:images.map(function(image,i){return/*#__PURE__*/_jsx(GridImage,{index:i,image:image,images:images,setImages:setImages,classes:classes},i);})});};export default FormMediaGrid;","map":{"version":3,"sources":["D:/Repositories/Visual C++/PosThis-React-app/src/components/Media/FormMediaGrid.js"],"names":["React","makeStyles","IconButton","Cancel","CancelIcon","useStyles","theme","previewGrid","display","width","justifyContent","flexWrap","borderRadius","boxShadow","overflow","previewContainer","flexGrow","height","previewImage","postion","top","left","objectFit","closePreviewIcon","position","zIndex","root","color","GridImage","props","classes","image","index","images","setImages","preview","file","deleteImage","i","indexOf","x","filter","elem","FormMediaGrid","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    IconButton\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    Cancel as CancelIcon\r\n} from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    previewGrid: {\r\n        display:        'flex',\r\n        width:          '100%',\r\n        justifyContent: 'center',\r\n        flexWrap:       'wrap',\r\n        borderRadius:   '10px',\r\n        boxShadow:      'black 0px 0px 2px',\r\n        overflow:       'hidden',\r\n      },\r\n      previewContainer:{\r\n        display:    'inline-block',\r\n        flexGrow:   '1',\r\n        width:      '50%',\r\n        height:     '180px',\r\n      },\r\n      previewImage:{\r\n        postion:    'absolute',\r\n        top:        '0',\r\n        left:       '0',\r\n        display:    'inline-block',\r\n        width:      '100%',\r\n        height:     '100%',\r\n        objectFit:  'cover'\r\n      },\r\n      closePreviewIcon:{\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        root:{\r\n          '&:hover $icon': {\r\n            color: 'blue',\r\n          }\r\n        }\r\n      }\r\n}));\r\n\r\nconst GridImage = ( props ) => {\r\n\r\n  const { classes, image, index, images, setImages } = props;\r\n  const { preview, file } = image;\r\n\r\n  const deleteImage = ()=>{\r\n    const i = images.indexOf( image );\r\n    setImages( x => x.filter( (elem,index)=> index != i ) );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.previewContainer}>\r\n      <IconButton className={classes.closePreviewIcon} color='secondary' aria-label='upload picture' component='span' onClick={deleteImage}>\r\n        <CancelIcon/>\r\n      </IconButton>\r\n      <img src={preview} className={classes.previewImage}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const FormMediaGrid = (props) =>{\r\n\r\n    const classes = useStyles();\r\n    const { images, setImages } = props;\r\n\r\n    return (\r\n        <div className={classes.previewGrid}>\r\n            {\r\n              images.map( (image, i)=>( <GridImage\r\n                                          key={i}\r\n                                          index={i}\r\n                                          image={image}\r\n                                          images={images}\r\n                                          setImages={setImages}\r\n                                          classes={classes}\r\n                                        />))\r\n            }\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default FormMediaGrid;"]},"metadata":{},"sourceType":"module"}