{"ast":null,"code":"import _regeneratorRuntime from\"D:/Repositories/Visual C++/PosThis-React-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Repositories/Visual C++/PosThis-React-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"D:/Repositories/Visual C++/PosThis-React-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{getURL}from'_config';import{arrayToCSV}from'_utils';import{authHeader}from'_helpers';import{authenticationService}from'_services';import{SignUpModel,LogInModel,SearchRequestModel,UpdateUserViewModel}from'_model';var getUsers=function getUsers(){var headers=_objectSpread({},authHeader());var options={headers:headers};return fetch(getURL('api/users/Get'),options);};var getUser=function getUser(id){var headers=_objectSpread(_objectSpread({},authHeader()),{},{'UserID':authenticationService.currentUserValue.id});var options={headers:headers};return fetch(getURL(\"api/users/Get/\".concat(id)),options);};/**\r\n * @param {SearchRequestModel} model \r\n */var getSearch=function getSearch(model){var headers=_objectSpread({},authHeader());var options={headers:headers};var url=new URL(getURL('api/users/GetSearch'));url.searchParams.set('UserID',authenticationService.currentUserValue.id);url.searchParams.set('SearchPosts',model.searchPosts);url.searchParams.set('SearchUsers',model.searchUsers);url.searchParams.set('Query',model.query);url.searchParams.set('Hashtags',arrayToCSV(model.hashtags));return fetch(url.href,options);};/**\r\n * @param {Number} id id del usuario en sesion\r\n */var getFeed=function getFeed(id){var headers=_objectSpread({},authHeader());var options={headers:headers};return fetch(getURL(\"api/users/GetFeed/\".concat(id)),options);};/**\r\n * @param {Number} id id del usuario en sesion\r\n */var getUserFeed=function getUserFeed(id){var headers=_objectSpread(_objectSpread({},authHeader()),{},{'UserID':authenticationService.currentUserValue.id});var options={headers:headers};return fetch(getURL(\"api/users/GetUserPosts/\".concat(id)),options);};/**\r\n * @param {SignUpModel} model\r\n */var createUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(model){var headers,options;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:headers={'Content-Type':'application/json'};options={method:'POST',body:JSON.stringify(model),headers:headers};return _context.abrupt(\"return\",fetch(getURL(\"api/security/CreateUser\"),options));case 3:case\"end\":return _context.stop();}}},_callee);}));return function createUser(_x){return _ref.apply(this,arguments);};}();/**\r\n * @param {LogInModel} model\r\n */var logIn=function logIn(model){var headers={'Content-Type':'application/json'};var options={method:'POST',body:JSON.stringify(model),headers:headers};return fetch(getURL(\"api/security/Login\"),options);};/**\r\n * @param {Number} id \r\n * @param {UpdateUserViewModel} model\r\n */var updateUser=function updateUser(id,model){var headers=_objectSpread({},authHeader());var fd=new FormData();fd.append('UserName',model.userName);fd.append('Tag',model.tag);fd.append('Email',model.email);fd.append('ProfilePic',model.profilePic);fd.append('CoverPic',model.coverPic);var options={method:'PUT',body:fd,headers:headers};return fetch(getURL(\"api/users/Update/\".concat(id)),options);};/**\r\n * @param   {Number} id\r\n */var deleteUser=function deleteUser(id){var headers=_objectSpread({'Content-Type':'application/json'},authHeader());var options={method:'DELETE',headers:headers};return fetch(getURL(\"api/users/Delete/\".concat(id)),options);};export{getUsers,getUser,getSearch,getFeed,getUserFeed,createUser,logIn,updateUser,deleteUser};","map":{"version":3,"sources":["D:/Repositories/Visual C++/PosThis-React-app/src/_api/users.js"],"names":["getURL","arrayToCSV","authHeader","authenticationService","SignUpModel","LogInModel","SearchRequestModel","UpdateUserViewModel","getUsers","headers","options","fetch","getUser","id","currentUserValue","getSearch","model","url","URL","searchParams","set","searchPosts","searchUsers","query","hashtags","href","getFeed","getUserFeed","createUser","method","body","JSON","stringify","logIn","updateUser","fd","FormData","append","userName","tag","email","profilePic","coverPic","deleteUser"],"mappings":"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","sourcesContent":["import {  getURL  }                 from '_config';\r\nimport { arrayToCSV }               from '_utils';\r\nimport { authHeader }               from '_helpers';\r\nimport { authenticationService }    from '_services';\r\n\r\nimport { SignUpModel, LogInModel, SearchRequestModel, UpdateUserViewModel} from '_model';\r\n\r\nconst getUsers = () => {\r\n\r\n    let headers= {\r\n        ...authHeader()\r\n    };\r\n\r\n    let options ={\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( 'api/users/Get' ), options );\r\n}\r\n\r\nconst getUser = ( id ) => {\r\n\r\n    let headers= {\r\n        ...authHeader(),\r\n        'UserID': authenticationService.currentUserValue.id\r\n    };\r\n\r\n    let options ={\r\n        headers\r\n    };\r\n    \r\n    return fetch( getURL( `api/users/Get/${id}` ), options );\r\n};\r\n\r\n/**\r\n * @param {SearchRequestModel} model \r\n */\r\nconst getSearch = ( model ) =>{\r\n\r\n    let headers= {\r\n        ...authHeader()\r\n    };\r\n\r\n    let options ={\r\n        headers\r\n    };\r\n\r\n    let url = new URL( getURL( 'api/users/GetSearch'));\r\n\r\n    url.searchParams.set( 'UserID', authenticationService.currentUserValue.id );\r\n    url.searchParams.set( 'SearchPosts', model.searchPosts );\r\n    url.searchParams.set( 'SearchUsers', model.searchUsers );\r\n    url.searchParams.set( 'Query', model.query );\r\n    url.searchParams.set( 'Hashtags', arrayToCSV( model.hashtags ) );\r\n\r\n    return fetch( url.href, options );\r\n};\r\n\r\n/**\r\n * @param {Number} id id del usuario en sesion\r\n */\r\nconst getFeed = ( id ) =>{\r\n    let headers= {\r\n        ...authHeader()\r\n    };\r\n\r\n    let options ={\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/users/GetFeed/${id}` ), options );\r\n};\r\n\r\n/**\r\n * @param {Number} id id del usuario en sesion\r\n */\r\n const getUserFeed = ( id ) =>{\r\n    let headers= {\r\n        ...authHeader(),\r\n        'UserID': authenticationService.currentUserValue.id  \r\n    };\r\n\r\n    let options ={\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/users/GetUserPosts/${id}` ), options );\r\n};\r\n\r\n/**\r\n * @param {SignUpModel} model\r\n */\r\nconst createUser = async ( model ) => {\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json'\r\n    };\r\n\r\n    const options = {\r\n        method: 'POST',\r\n        body: JSON.stringify( model ),\r\n        headers: headers\r\n    };\r\n\r\n    return fetch( getURL( `api/security/CreateUser` ), options );\r\n};\r\n\r\n/**\r\n * @param {LogInModel} model\r\n */\r\nconst logIn = ( model ) => {\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json'\r\n    };\r\n\r\n    const options = {\r\n        method: 'POST',\r\n        body: JSON.stringify( model ),\r\n        headers: headers\r\n    };\r\n\r\n    return fetch( getURL( `api/security/Login` ), options );\r\n};\r\n\r\n/**\r\n * @param {Number} id \r\n * @param {UpdateUserViewModel} model\r\n */\r\nconst updateUser = ( id, model ) =>{\r\n\r\n    const headers = {\r\n        ...authHeader()\r\n    };\r\n\r\n    let fd = new FormData();\r\n    fd.append('UserName'    , model.userName    );\r\n    fd.append('Tag'         , model.tag         );\r\n    fd.append('Email'       , model.email       );\r\n    fd.append('ProfilePic'  , model.profilePic  );\r\n    fd.append('CoverPic'    , model.coverPic    );\r\n\r\n    const options = {\r\n        method: 'PUT',\r\n        body: fd,\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/users/Update/${id}` ), options );\r\n};\r\n\r\n/**\r\n * @param   {Number} id\r\n */\r\nconst deleteUser = ( id ) =>{\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        ...authHeader()\r\n    };\r\n\r\n    const options = {\r\n        method: 'DELETE',\r\n        headers\r\n    };\r\n    \r\n    return fetch( getURL( `api/users/Delete/${id}` ), options );\r\n};\r\n\r\nexport{\r\n    getUsers,\r\n    getUser,\r\n    getSearch,\r\n    getFeed,\r\n    getUserFeed,\r\n    createUser,\r\n    logIn,\r\n    updateUser,\r\n    deleteUser\r\n}"]},"metadata":{},"sourceType":"module"}