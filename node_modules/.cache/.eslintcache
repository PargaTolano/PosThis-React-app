[{"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\index.js":"1","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\App.js":"2","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\reportWebVitals.js":"3","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\index.js":"4","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_utils\\index.js":"5","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Routing\\index.js":"6","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_helpers\\index.js":"7","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_services\\index.js":"8","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Login.js":"9","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\NotFound.js":"10","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\PostDetail.js":"11","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\ProfileDetail.js":"12","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Feed.js":"13","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\SearchResult.js":"14","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_utils\\regex.js":"15","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_utils\\localStorage.js":"16","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_utils\\routes.js":"17","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_utils\\utils.js":"18","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_utils\\fileLoading.js":"19","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_utils\\validation.js":"20","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Routing\\PrivateRoute.js":"21","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Routing\\PublicRoute.js":"22","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_helpers\\auth.js":"23","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_helpers\\history.js":"24","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_helpers\\handleResponse.js":"25","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_services\\authentication.service.js":"26","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_api\\users.js":"27","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Registro\\index.js":"28","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Inicio\\index.js":"29","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_hooks\\index.js":"30","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Profile\\index.js":"31","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Post\\index.js":"32","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_api\\index.js":"33","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Search\\index.js":"34","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Registro\\DialogSignup.js":"35","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Inicio\\Navbar.js":"36","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_hooks\\useGetUserProfile.js":"37","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Profile\\ProfileContainer.js":"38","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Post\\CreatePostForm.js":"39","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_api\\reposts.js":"40","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Search\\UserCard.js":"41","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_api\\replies.js":"42","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\index.js":"43","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\RepostViewModel.js":"44","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\CPostModel.js":"45","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\UReplyModel.js":"46","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\UPostModel.js":"47","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_config\\index.js":"48","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Media\\index.js":"49","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_config\\config.js":"50","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Media\\MediaGrid.js":"51","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Media\\FormMediaGrid.js":"52","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\CReplyModel.js":"53","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\FollowViewModel.js":"54","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\SearchRequestModel.js":"55","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\UpdateUserViewModel.js":"56","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\LikeViewModel.js":"57","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\SignUpModel.js":"58","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\LogInModel.js":"59","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_api\\posts.js":"60","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_api\\likes.js":"61","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_api\\follow.js":"62","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Post\\ReplyCard.js":"63","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Post\\PostCard.js":"64","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Post\\CreateReplyForm.js":"65","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_hooks\\useMakeSearch.js":"66","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Profile\\ProfileCard.js":"67","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_hooks\\useGetDetailedPost.js":"68","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Inicio\\PostContainer.js":"69","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Registro\\Signup.js":"70","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\EditProfile\\index.js":"71","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\EditProfile\\DialogEditInfo.js":"72","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\EditProfile\\EditInfo.js":"73"},{"size":517,"mtime":1616811978675,"results":"74","hashOfConfig":"75"},{"size":1563,"mtime":1621815250402,"results":"76","hashOfConfig":"75"},{"size":375,"mtime":1616811978676,"results":"77","hashOfConfig":"75"},{"size":176,"mtime":1621664884429,"results":"78","hashOfConfig":"75"},{"size":173,"mtime":1621664884410,"results":"79","hashOfConfig":"75"},{"size":63,"mtime":1621815250406,"results":"80","hashOfConfig":"75"},{"size":84,"mtime":1621301924765,"results":"81","hashOfConfig":"75"},{"size":41,"mtime":1621302107507,"results":"82","hashOfConfig":"75"},{"size":3548,"mtime":1621815250404,"results":"83","hashOfConfig":"75"},{"size":2288,"mtime":1621726413793,"results":"84","hashOfConfig":"75"},{"size":2585,"mtime":1621803132480,"results":"85","hashOfConfig":"75"},{"size":1425,"mtime":1621664884424,"results":"86","hashOfConfig":"75"},{"size":2681,"mtime":1621815250403,"results":"87","hashOfConfig":"75"},{"size":2592,"mtime":1621815250407,"results":"88","hashOfConfig":"75"},{"size":370,"mtime":1621664884410,"results":"89","hashOfConfig":"75"},{"size":112,"mtime":1620936692618,"results":"90","hashOfConfig":"75"},{"size":326,"mtime":1621646249905,"results":"91","hashOfConfig":"75"},{"size":332,"mtime":1621664884411,"results":"92","hashOfConfig":"75"},{"size":391,"mtime":1621664884410,"results":"93","hashOfConfig":"75"},{"size":2667,"mtime":1621664884412,"results":"94","hashOfConfig":"75"},{"size":582,"mtime":1621815250406,"results":"95","hashOfConfig":"75"},{"size":565,"mtime":1621815250406,"results":"96","hashOfConfig":"75"},{"size":335,"mtime":1621664884365,"results":"97","hashOfConfig":"75"},{"size":97,"mtime":1621279870537,"results":"98","hashOfConfig":"75"},{"size":547,"mtime":1621664884368,"results":"99","hashOfConfig":"75"},{"size":957,"mtime":1621664884409,"results":"100","hashOfConfig":"75"},{"size":3786,"mtime":1621664884341,"results":"101","hashOfConfig":"75"},{"size":58,"mtime":1621815250405,"results":"102","hashOfConfig":"75"},{"size":59,"mtime":1621664884416,"results":"103","hashOfConfig":"75"},{"size":109,"mtime":1621664884371,"results":"104","hashOfConfig":"75"},{"size":67,"mtime":1621664884424,"results":"105","hashOfConfig":"75"},{"size":128,"mtime":1621664884422,"results":"106","hashOfConfig":"75"},{"size":159,"mtime":1621664884339,"results":"107","hashOfConfig":"75"},{"size":27,"mtime":1621664884427,"results":"108","hashOfConfig":"75"},{"size":2389,"mtime":1621815250405,"results":"109","hashOfConfig":"75"},{"size":4583,"mtime":1621664884416,"results":"110","hashOfConfig":"75"},{"size":605,"mtime":1621664884377,"results":"111","hashOfConfig":"75"},{"size":2788,"mtime":1621664884423,"results":"112","hashOfConfig":"75"},{"size":4905,"mtime":1621664884420,"results":"113","hashOfConfig":"75"},{"size":1058,"mtime":1621664884341,"results":"114","hashOfConfig":"75"},{"size":2819,"mtime":1621815250407,"results":"115","hashOfConfig":"75"},{"size":2126,"mtime":1621664884340,"results":"116","hashOfConfig":"75"},{"size":372,"mtime":1621664884408,"results":"117","hashOfConfig":"75"},{"size":200,"mtime":1621664884406,"results":"118","hashOfConfig":"75"},{"size":253,"mtime":1621664884385,"results":"119","hashOfConfig":"75"},{"size":263,"mtime":1621664884408,"results":"120","hashOfConfig":"75"},{"size":261,"mtime":1621664884407,"results":"121","hashOfConfig":"75"},{"size":25,"mtime":1621664884360,"results":"122","hashOfConfig":"75"},{"size":62,"mtime":1621664884419,"results":"123","hashOfConfig":"75"},{"size":264,"mtime":1621815250402,"results":"124","hashOfConfig":"75"},{"size":3624,"mtime":1621664884418,"results":"125","hashOfConfig":"75"},{"size":2442,"mtime":1621664884418,"results":"126","hashOfConfig":"75"},{"size":318,"mtime":1621664884386,"results":"127","hashOfConfig":"75"},{"size":233,"mtime":1621664884402,"results":"128","hashOfConfig":"75"},{"size":355,"mtime":1621664884406,"results":"129","hashOfConfig":"75"},{"size":449,"mtime":1621664884408,"results":"130","hashOfConfig":"75"},{"size":197,"mtime":1621664884405,"results":"131","hashOfConfig":"75"},{"size":298,"mtime":1621664884407,"results":"132","hashOfConfig":"75"},{"size":205,"mtime":1621664884406,"results":"133","hashOfConfig":"75"},{"size":1934,"mtime":1621664884340,"results":"134","hashOfConfig":"75"},{"size":1274,"mtime":1621664884339,"results":"135","hashOfConfig":"75"},{"size":2100,"mtime":1621664884338,"results":"136","hashOfConfig":"75"},{"size":9860,"mtime":1621664884422,"results":"137","hashOfConfig":"75"},{"size":13391,"mtime":1621815250404,"results":"138","hashOfConfig":"75"},{"size":5354,"mtime":1621664884421,"results":"139","hashOfConfig":"75"},{"size":726,"mtime":1621664884379,"results":"140","hashOfConfig":"75"},{"size":4775,"mtime":1621664884423,"results":"141","hashOfConfig":"75"},{"size":721,"mtime":1621664884372,"results":"142","hashOfConfig":"75"},{"size":1247,"mtime":1621815250404,"results":"143","hashOfConfig":"75"},{"size":5408,"mtime":1621815250405,"results":"144","hashOfConfig":"75"},{"size":62,"mtime":1621664884414,"results":"145","hashOfConfig":"75"},{"size":2303,"mtime":1621815250402,"results":"146","hashOfConfig":"75"},{"size":8930,"mtime":1621815250403,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c5crh5",{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":8,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"292"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"295"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"318"},"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\App.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\reportWebVitals.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_utils\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Routing\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_helpers\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_services\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Login.js",["319","320","321","322","323"],"import React,{ useState, useEffect }from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  FormControlLabel,\r\n  Button,\r\n  Link,\r\n  CssBaseline,\r\n  Avatar,\r\n  Paper,\r\n  Checkbox,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles }             from '@material-ui/core/styles';\r\nimport PersonPinIcon              from '@material-ui/icons/PersonPin';\r\n\r\nimport { DialogSignup, SignUp }   from 'components/Registro';\r\n\r\nimport { authenticationService }  from '_services';\r\nimport { routes }                 from '_utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  }, \r\n  image: {\r\n    backgroundImage: 'url(/img/backgroundPT.png)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  form: {\r\n    width: '100%', \r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport const Login = (props) => {\r\n\r\n  const { match, history} = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [ username, setUsername ] = useState('');\r\n  const [ password, setPassword ] = useState('');\r\n\r\n  const getOnChange = ( setState )=>e=>setState(e.target.value);\r\n\r\n  const onSubmit = async e =>{\r\n    e.preventDefault();\r\n\r\n    authenticationService\r\n      .login( username, password )\r\n      .then( () => history.push( routes.feed ) )\r\n      .catch( console.warn );\r\n  };\r\n\r\n  return (\r\n    <Grid container component='main' className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12}    sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <PersonPinIcon />\r\n          </Avatar>\r\n\r\n          <Typography component='h1' variant='h5'>\r\n            <strong>Inicia Sesión</strong>\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              id='email'\r\n              label='Correo electrónico o Nombre de Usuario'\r\n              name='email'\r\n              autoComplete='email'\r\n              autoFocus\r\n              onChange = {getOnChange(setUsername)}\r\n            />\r\n\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              name='password'\r\n              label='Contraseña'\r\n              type='password'\r\n              id='password'\r\n              autoComplete='current-password'\r\n              onChange = {getOnChange(setPassword)}\r\n            />\r\n\r\n            <Button\r\n              type='submit'\r\n              fullWidth\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.submit}\r\n            >\r\n              Ingresar\r\n            </Button>\r\n          </form>\r\n          <Grid container>\r\n              <Grid item>\r\n                <DialogSignup>\r\n                  <SignUp/>\r\n                </DialogSignup>\r\n              </Grid>\r\n            </Grid>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\NotFound.js",["324"],"import React,{ useEffect } from 'react';\r\n\r\nimport { makeStyles }    from '@material-ui/core/styles';\r\n\r\nimport { routes }        from '_utils';\r\n\r\nimport backapp3          from 'assets/backapp3.png';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    Background: {\r\n        backgroundImage: `url('${backapp3}')`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundAttachment: 'fixed',\r\n        backgroundRepeat: 'no-repeat',\r\n        minHeight: '100vh'\r\n      },\r\n    message:{\r\n        display: 'inline-block',\r\n        position: 'fixed',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate( -50%, -50%)',\r\n        width: '100%',\r\n        maxWidth: '500px',\r\n        height: '100%',\r\n        maxHeight: '300px',\r\n        color: 'white',\r\n        backgroundColor: '#2b387f',\r\n        padding: theme.spacing(2),\r\n        borderRadius: theme.spacing(1),\r\n        boxShadow:        'black 1px 1px 8px',\r\n    },\r\n    error:{\r\n        display: 'inline-block',\r\n        color: 'white',\r\n        fontSize: '3rem',\r\n        marginBottom: 0,\r\n    },\r\n    errorCode:{\r\n        display: 'inline-block',\r\n        color: '#ea5970',\r\n        fontSize: '4rem',\r\n        marginLeft: theme.spacing(4),\r\n        marginBottom: 0,\r\n    },\r\n    errorDescription:{\r\n        color: 'gray',\r\n        fontSize: '1rem',\r\n        marginBottom: 0,\r\n        wordSpacing: 2,\r\n    },\r\n    errorAction:{\r\n        display: 'inline-block',\r\n        color: 'white',\r\n        fontSize: '0.8rem',\r\n        marginBottom: 0,\r\n        wordSpacing: 3,\r\n    }\r\n}));\r\n\r\nexport const NotFound = ( props ) => {\r\n\r\n    const {history} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>history.replace(routes.feed), 3000);\r\n    },[]);\r\n\r\n    return (\r\n        <div className={classes.Background}>\r\n            <div className={classes.message}>\r\n                <p className={classes.error}>   ERROR </p>\r\n                <p className={classes.errorCode}> 404 </p>  \r\n                <p className={classes.errorDescription}>Pagina no encontrada</p>\r\n                <p className={classes.errorAction}>Se redirigira a la pagina principal en un momento...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\PostDetail.js",["325","326","327"],"import React                        from 'react';\r\nimport { Redirect }                 from 'react-router-dom';\r\n\r\nimport { makeStyles }               from '@material-ui/core/styles';\r\n\r\nimport { NavBar }                   from 'components/Inicio';\r\n\r\nimport {\r\n  PostCard,\r\n  ReplyCard, \r\n  CreateReplyForm\r\n} from 'components/Post';\r\n\r\nimport { routes }                   from '_utils';\r\nimport { useGetDetailedPost }       from '_hooks';\r\n\r\nimport backapp3                     from 'assets/backapp3.png';\r\n\r\nconst useStyles = makeStyles( ( theme ) => ({\r\n  Background: {\r\n    backgroundImage: `url('${backapp3}')`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    backgroundAttachment: 'fixed',\r\n    backgroundRepeat: 'no-repeat',\r\n    minHeight: '100vh',\r\n  },\r\n  cardHolder: {\r\n    backgroundColor: 'transparent',\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(2),\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  titleBegin:{\r\n    postition: 'sticky',\r\n    display: 'inline-block',\r\n    top: '0',\r\n    color: 'white',\r\n    fontFamily: 'Arial',\r\n    fontStyle: 'normal',\r\n    fontSize: 30,\r\n    width: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    textAlign: 'center',\r\n    flexDirection:'column',\r\n  },\r\n}));\r\n\r\nexport const PostDetail = ( props ) => {\r\n  \r\n  const { match, history, ...rest } = props;\r\n  const { id }    = match.params;\r\n  const classes   = useStyles();\r\n\r\n  const [[ready, post], setPost, setReplies] = useGetDetailedPost( id );\r\n\r\n  if( id == 'undefined' || id === undefined || id === null || id === '' ){\r\n    return (<Redirect to={routes.feed}/>);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Background}>\r\n      <NavBar history={history}/>\r\n\r\n    {\r\n      (ready && post )\r\n      &&\r\n      <>\r\n        <div component='h4' variant='h2' className={classes.titleBegin}>\r\n          <strong>Detalle del post</strong>\r\n        </div>\r\n        <div className={classes.cardHolder}>\r\n          <PostCard post={post} history={history}/>\r\n          <CreateReplyForm postId={post?.postID} setReplies={setReplies}/>\r\n          {\r\n            post.replies?.map((reply,i)=>{\r\n              \r\n              let first = i === 0;\r\n              let last  = i === post.replies.length - 1;\r\n              \r\n              return <ReplyCard key={reply.replyID} reply={reply} first={first} last={last} />;\r\n            })\r\n          }\r\n        </div>\r\n      </>\r\n    }\r\n      \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetail;\r\n","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\ProfileDetail.js",["328"],"import React                    from 'react';\r\nimport { Redirect }             from 'react-router-dom';\r\n\r\nimport { makeStyles }           from '@material-ui/core/styles';\r\n\r\nimport { NavBar }               from 'components/Inicio';\r\nimport { ProfileContainer }     from 'components/Profile';\r\n\r\nimport { routes }               from '_utils';\r\nimport { useGetUserProfile }    from '_hooks';\r\n\r\nimport backapp2                 from 'assets/backapp2.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Background:{\r\n    backgroundImage:      `url('${backapp2}')`,\r\n    backgroundSize:       'cover',\r\n    backgroundPosition:   'center',\r\n    backgroundAttachment: 'fixed',\r\n    backgroundRepeat:     'no-repeat',\r\n    minHeight:            '100vh'\r\n  }\r\n}));\r\n\r\nexport const ProfileDetail = (props) => {\r\n\r\n  const { match, ...rest } = props;\r\n  const { id }             = match.params;\r\n  const classes            = useStyles();\r\n\r\n  const [[ready, user], setUser] = useGetUserProfile( id || '' );\r\n\r\n  if( id == 'undefined' || id === undefined || id === null || id === '' ){\r\n    return (<Redirect to={routes.feed}/>);\r\n  }\r\n\r\n  return (\r\n      <div className= {classes.Background}>\r\n      <NavBar {...rest}/>\r\n      {\r\n        ( ready ) \r\n        && \r\n        (\r\n          <ProfileContainer user={user} setUser={setUser} {...rest}/>\r\n        )\r\n      }\r\n        \r\n      </div>\r\n  );\r\n};\r\n\r\nexport default ProfileDetail;\r\n","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Feed.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\SearchResult.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_utils\\regex.js",["329","330"],"const passwordRegex =\r\n     /^[a-z][a-z0-9_.-]*/i;\r\n\r\nconst userNameRegex = /^[0-9A-Za-z_.-]+$/;\r\n\r\nconst emailRegex = \r\n     /([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\r\n\r\nconst tagRegex = /^[a-z0-9]+$/i;\r\n\r\nexport{\r\n     passwordRegex,\r\n     userNameRegex,\r\n     emailRegex,\r\n     tagRegex\r\n}","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_utils\\localStorage.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_utils\\routes.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_utils\\utils.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_utils\\fileLoading.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_utils\\validation.js",["331","332","333","334","335","336","337","338"],"import { emailRegex, userNameRegex, passwordRegex, tagRegex } from '_utils';\r\n\r\nconst validateLogin = ({userName, password})=>{\r\n\r\n    const validation = {\r\n        userName:   true,\r\n        password:   true,\r\n        validated:  true\r\n    };\r\n\r\n    if ( !passwordRegex .test( password || '' ) ){\r\n        validation.password = false;\r\n        validation.validated = false;\r\n    }\r\n     \r\n\r\n    if ( !( emailRegex.test( userName || '' ) || userNameRegex.test( userName || '' ) ) ){\r\n        validation.userName = false;\r\n        validation.validated = false;\r\n    }\r\n    \r\n    return validation;\r\n};\r\n\r\nconst validateSignup = ( {userName, tag, email, password} ) =>{\r\n\r\n    const validation = {\r\n        userName:   true,\r\n        tag:        true,\r\n        email:      true,\r\n        password:   true,\r\n        validated:  true,\r\n    };\r\n\r\n    if ( !userNameRegex .test( userName || '' ) ){\r\n        validation.userName     = false;\r\n        validation.validated    = false;\r\n    }\r\n\r\n    if ( !tagRegex .test( tag || '' ) ){\r\n        validation.tag          = false;\r\n        validation.validated    = false;\r\n    }       \r\n\r\n    if ( !emailRegex .test( email || '' ) ){\r\n        validation.email        = false;\r\n        validation.validated    = false;\r\n    }\r\n\r\n    if ( !passwordRegex .test( password || '' ) ){\r\n        validation.password     = false;\r\n        validation.validated    = false;\r\n    }\r\n    \r\n    return validation;\r\n};\r\n\r\nconst validateUpdateUser = ( {userName, tag, email} ) =>{\r\n\r\n    const validation = {\r\n        userName:   true,\r\n        tag:        true,\r\n        email:      true,\r\n        validated:  true,\r\n    };\r\n\r\n    if ( !userNameRegex .test( userName || '' ) ){\r\n        validation.userName     = false;\r\n        validation.validated    = false;\r\n    }\r\n\r\n    if ( !tagRegex .test( tag || '' ) ){\r\n        validation.tag          = false;\r\n        validation.validated    = false;\r\n    }       \r\n\r\n    if ( !emailRegex .test( email || '' ) ){\r\n        validation.email        = false;\r\n        validation.validated    = false;\r\n    }\r\n    \r\n    return validation;\r\n};\r\n\r\nconst validateCreateAndUpdatePost = ( {content, mediaCount} )=>{\r\n\r\n    const validation = {\r\n        content:    true,\r\n        mediaCount: true,\r\n        validated:  true\r\n    };\r\n\r\n    if( content.length === 0 ){\r\n        validation.content = false;\r\n    }\r\n\r\n    if( mediaCount === 0 ){\r\n        validation.mediaCount = false;\r\n    }\r\n\r\n    validation.validated = validation.content || validation.mediaCount;\r\n\r\n    return validation;\r\n};\r\n\r\nexport{\r\n    validateLogin,\r\n    validateSignup,\r\n    validateUpdateUser,\r\n    validateCreateAndUpdatePost\r\n}","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Routing\\PrivateRoute.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Routing\\PublicRoute.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_helpers\\auth.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_helpers\\history.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_helpers\\handleResponse.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_services\\authentication.service.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_api\\users.js",["339","340","341","342"],"import {  getURL  }                 from '_config';\r\nimport { arrayToCSV }               from '_utils';\r\nimport { authHeader }               from '_helpers';\r\nimport { authenticationService }    from '_services';\r\n\r\nimport { SignUpModel, LogInModel, SearchRequestModel, UpdateUserViewModel} from '_model';\r\n\r\nconst getUsers = () => {\r\n\r\n    let headers= {\r\n        ...authHeader()\r\n    };\r\n\r\n    let options ={\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( 'api/users/Get' ), options );\r\n}\r\n\r\nconst getUser = ( id ) => {\r\n\r\n    let headers= {\r\n        ...authHeader(),\r\n        'UserID': authenticationService.currentUserValue.id\r\n    };\r\n\r\n    let options ={\r\n        headers\r\n    };\r\n    \r\n    return fetch( getURL( `api/users/Get/${id}` ), options );\r\n};\r\n\r\n/**\r\n * @param {SearchRequestModel} model \r\n */\r\nconst getSearch = ( model ) =>{\r\n\r\n    let headers= {\r\n        ...authHeader()\r\n    };\r\n\r\n    let options ={\r\n        headers\r\n    };\r\n\r\n    let url = new URL( getURL( 'api/users/GetSearch'));\r\n\r\n    url.searchParams.set( 'UserID', authenticationService.currentUserValue.id );\r\n    url.searchParams.set( 'SearchPosts', model.searchPosts );\r\n    url.searchParams.set( 'SearchUsers', model.searchUsers );\r\n    url.searchParams.set( 'Query', model.query );\r\n    url.searchParams.set( 'Hashtags', arrayToCSV( model.hashtags ) );\r\n\r\n    return fetch( url.href, options );\r\n};\r\n\r\n/**\r\n * @param {Number} id id del usuario en sesion\r\n */\r\nconst getFeed = ( id ) =>{\r\n    let headers= {\r\n        ...authHeader()\r\n    };\r\n\r\n    let options ={\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/users/GetFeed/${id}` ), options );\r\n};\r\n\r\n/**\r\n * @param {Number} id id del usuario en sesion\r\n */\r\n const getUserFeed = ( id ) =>{\r\n    let headers= {\r\n        ...authHeader(),\r\n        'UserID': authenticationService.currentUserValue.id  \r\n    };\r\n\r\n    let options ={\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/users/GetUserPosts/${id}` ), options );\r\n};\r\n\r\n/**\r\n * @param {SignUpModel} model\r\n */\r\nconst createUser = async ( model ) => {\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json'\r\n    };\r\n\r\n    const options = {\r\n        method: 'POST',\r\n        body: JSON.stringify( model ),\r\n        headers: headers\r\n    };\r\n\r\n    return fetch( getURL( `api/security/CreateUser` ), options );\r\n};\r\n\r\n/**\r\n * @param {LogInModel} model\r\n */\r\nconst logIn = ( model ) => {\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json'\r\n    };\r\n\r\n    const options = {\r\n        method: 'POST',\r\n        body: JSON.stringify( model ),\r\n        headers: headers\r\n    };\r\n\r\n    return fetch( getURL( `api/security/Login` ), options );\r\n};\r\n\r\n/**\r\n * @param {Number} id \r\n * @param {UpdateUserViewModel} model\r\n */\r\nconst updateUser = ( id, model ) =>{\r\n\r\n    const headers = {\r\n        ...authHeader()\r\n    };\r\n\r\n    let fd = new FormData();\r\n    fd.append('UserName'    , model.userName    );\r\n    fd.append('Tag'         , model.tag         );\r\n    fd.append('Email'       , model.email       );\r\n    fd.append('ProfilePic'  , model.profilePic  );\r\n    fd.append('CoverPic'    , model.coverPic    );\r\n\r\n    const options = {\r\n        method: 'PUT',\r\n        body: fd,\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/users/Update/${id}` ), options );\r\n};\r\n\r\n/**\r\n * @param   {Number} id\r\n */\r\nconst deleteUser = ( id ) =>{\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        ...authHeader()\r\n    };\r\n\r\n    const options = {\r\n        method: 'DELETE',\r\n        headers\r\n    };\r\n    \r\n    return fetch( getURL( `api/users/Delete/${id}` ), options );\r\n};\r\n\r\nexport{\r\n    getUsers,\r\n    getUser,\r\n    getSearch,\r\n    getFeed,\r\n    getUserFeed,\r\n    createUser,\r\n    logIn,\r\n    updateUser,\r\n    deleteUser\r\n}","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Registro\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Inicio\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_hooks\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Profile\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Post\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_api\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Search\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Registro\\DialogSignup.js",["343","344"],"import React,{ Children, cloneElement, useState} from 'react';\r\nimport { withStyles }   from '@material-ui/core/styles';\r\nimport Button           from '@material-ui/core/Button';\r\nimport Dialog           from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle   from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton       from '@material-ui/core/IconButton';\r\nimport CloseIcon        from '@material-ui/icons/Close';\r\nimport Typography       from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h6'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label='close' className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\nexport const DialogSignup = ({children}) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const childrenWithProps = Children.map(children, (child, index) => {\r\n    return cloneElement(child, {\r\n      handleClose,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Button variant='contained' color='secondary' onClick={handleClickOpen}>\r\n        Regístrate\r\n      </Button>\r\n      <Dialog onClose={handleClose} aria-labelledby='customized-dialog-title' open={open}>\r\n        <DialogContent dividers>\r\n\r\n            {\r\n              childrenWithProps\r\n            }\r\n        </DialogContent>\r\n        \r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogSignup;","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Inicio\\Navbar.js",["345","346","347","348"],"import React,{ useState} from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  InputBase,\r\n  MenuItem,\r\n  Menu,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\nimport { Link, Redirect }         from 'react-router-dom';\r\nimport { fade, makeStyles }       from '@material-ui/core/styles';\r\nimport SearchIcon                 from '@material-ui/icons/Search';\r\nimport AccountCircle              from '@material-ui/icons/AccountCircle';\r\nimport Logo                       from 'assets/Logo.png';\r\nimport LogoNominado               from 'assets/logPT.svg';\r\n\r\nimport { routes }                 from '_utils';\r\nimport { authenticationService }  from '_services';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  PosthisLogo: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  titleimg: {},\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    marginRight: theme.spacing(2),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n  Tool:{\r\n    position: 'sticky',\r\n    top: 0,\r\n    backgroundColor: '#1b2452',\r\n  },\r\n  userIcon:{\r\n    color: '#ea5970',\r\n  },\r\n}));\r\n\r\nexport const NavBar = (props) => {\r\n\r\n  const { history }= props;\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [query, setQuery]       = useState('');\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onClickProfile = ()=>{\r\n    history.push( routes.getProfile( authenticationService.currentUserValue.id ) );\r\n  };\r\n\r\n  const handleLogOut = ()=>{\r\n    authenticationService.logout();\r\n    history.push( routes.login );\r\n  }\r\n\r\n  const onChange = ( e )=>setQuery( e.target.value);\r\n\r\n  const onSearch = ( e )=>{\r\n    e.preventDefault();\r\n    history.push( routes.getSearch(query));\r\n  };\r\n\r\n  return (\r\n      <AppBar className={classes.Tool}>\r\n        <Toolbar>\r\n          <div>\r\n              <Link to={routes.feed}>\r\n              <img className={classes.PosthisLogo} src= {Logo} width= '50' height='50'/>\r\n              </Link>\r\n          </div>\r\n\r\n          <div className={classes.title}>\r\n            <img src={LogoNominado} width='120' height='60' alt='Logo' />\r\n          </div>\r\n\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n\r\n            <form onSubmit ={onSearch}>\r\n              <InputBase\r\n                placeholder='Buscar…'\r\n                value={query}\r\n                classes ={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n                onChange  ={onChange}\r\n\r\n              />\r\n            </form>\r\n            \r\n          </div>\r\n\r\n          <div>\r\n            <IconButton\r\n              color='inherit'\r\n              aria-controls='simple-menu'\r\n              aria-haspopup='true'\r\n              onClick={handleClick}\r\n            >\r\n            <AccountCircle className={classes.userIcon}/>\r\n            </IconButton>\r\n\r\n            <Menu\r\n              id='simple-menu'\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={onClickProfile }>Perfil</MenuItem>\r\n              <MenuItem onClick={handleLogOut}>Cerrar sesión</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n  );\r\n}\r\n\r\nexport default NavBar;","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_hooks\\useGetUserProfile.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Profile\\ProfileContainer.js",["349","350"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles }                 from '@material-ui/core/styles';\r\nimport { CircularProgress }           from '@material-ui/core';\r\n\r\nimport { ProfileCard }                from 'components/Profile';\r\nimport { PostContainer }              from 'components/Inicio';\r\nimport { CreatePostForm }             from 'components/Post';\r\n\r\nimport { handleResponse }             from '_helpers';\r\nimport { authenticationService }      from '_services';\r\nimport { getUserFeed }                from '_api';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{\r\n    width:        '100%',\r\n    maxWidth:     '1200px',\r\n    marginLeft:   'auto',\r\n    marginRight:  'auto'\r\n  },\r\n  coverPic:{\r\n    display: 'inline-block',\r\n    width: '100%',\r\n    height: theme.spacing( 50 ),\r\n    objectFit: 'cover',\r\n    borderRadius: '0px 0px 10px 10px',\r\n    marginBottom: theme.spacing( 3 ),\r\n    [theme.breakpoints.down('sm')]:{\r\n      marginBottom: theme.spacing( 33 ),\r\n    }\r\n  },\r\n  column:{\r\n    position:     'relative',\r\n    width:        '100%',\r\n    paddingLeft:  '30%',\r\n    [theme.breakpoints.down('sm')]:{\r\n      paddingLeft: '0'\r\n    }\r\n  }\r\n}));\r\n\r\nconst coverPlaceholder = 'https://png.pngtree.com/thumb_back/fw800/background/20190220/ourmid/pngtree-blue-gradient-summer-creative-image_9270.jpg';\r\n\r\nexport const ProfileContainer = ( props ) => {\r\n  const { user, ...rest } = props;\r\n  const classes = useStyles();\r\n\r\n  \r\n  const [{ posts, loading }, setState] = useState({\r\n    posts: [],\r\n    loading: false\r\n  });\r\n\r\n  const loadFeed = ()=>{\r\n    \r\n    setState(x=>{\r\n      let copy = {...x};\r\n      copy.loading = true;\r\n      return copy;\r\n    });\r\n\r\n    getUserFeed(user.id)\r\n      .then(handleResponse)\r\n      .then(res=>{\r\n        const { data } = res;\r\n        setState(x=>{\r\n          let copy = {...x};\r\n          copy.loading = false;\r\n          copy.posts = data;\r\n          return copy;\r\n        });\r\n      })\r\n      .catch(console.warn);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadFeed();\r\n  },[user]);\r\n\r\n  return (\r\n      <>\r\n        {\r\n          loading &&\r\n          <div className={classes.loading}>\r\n            <CircularProgress color='primary'/>\r\n          </div>\r\n        }\r\n        <div className={classes.root}>\r\n\r\n          <img className={classes.coverPic} src={ user.coverPicPath || coverPlaceholder } />\r\n\r\n          <ProfileCard user={user} {...rest}/>\r\n          <div className={classes.column}>\r\n\r\n            {\r\n              ( authenticationService.currentUserValue.id === user.id ) && <CreatePostForm afterUpdate={loadFeed} {...rest}/>\r\n            }\r\n\r\n            <PostContainer posts={posts} {...rest}/>\r\n          </div>\r\n          \r\n        </div>\r\n      </>\r\n  );\r\n}\r\nexport default ProfileContainer;","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Post\\CreatePostForm.js",["351"],"import React,{useState, useEffect, useRef} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Image as ImageIcon\r\n} from '@material-ui/icons';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n} from '@material-ui/core';\r\n\r\nimport { FormMediaGrid }          from 'components/Media';\r\n\r\nimport { handleResponse }         from '_helpers';\r\nimport { authenticationService }  from '_services';\r\nimport { \r\n  fileToBase64,\r\n   validateCreateAndUpdatePost \r\n} from '_utils';\r\nimport { createPost }             from '_api';\r\n\r\nimport CPostModel     from '_model/CPostModel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    background:   'white',\r\n    width:        '100%',\r\n    maxWidth:     '800px',\r\n    height:       '40%',\r\n    padding:      theme.spacing(3),\r\n    borderRadius: 10,  \r\n    alignItems:   'center',\r\n    justifySelf:  'center',\r\n    alignSelf:    'center',\r\n    marginLeft:   'auto',\r\n    marginRight:  'auto',\r\n  },\r\n  cardBtn: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    color: 'white',\r\n    alignSelf:'center',\r\n  },\r\n  submit: {\r\n    order: 0,\r\n    width: '20%',\r\n    [theme.breakpoints.down('sm')]:{\r\n      order: 1,\r\n      width: '100%',\r\n      flexGrow: '1',\r\n      flexShrink: '0',\r\n      flexBasis: 'auto',\r\n    }\r\n  },\r\n  imageIcon: {\r\n    order: 1,\r\n    [theme.breakpoints.down('sm')]:{\r\n      order: 0,\r\n      flexGrow: '1',\r\n      flexShrink: '0',\r\n      flexBasis: 'auto',\r\n    }\r\n  },\r\n  titleForm: {\r\n    justifyContent: 'space-around',\r\n    color: theme.palette.primary.dark ,\r\n    alignSelf:'center',\r\n    color:'#ea5970',\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  \r\n}));\r\n\r\nexport const CreatePostForm = (props) => {\r\n\r\n  const {afterUpdate} = props;\r\n  \r\n  const [images, setImages]   = useState( [] );\r\n  const [content, setContent] = useState( '' );\r\n\r\n  const [validation, setValidation] = useState({\r\n    content:    false,\r\n    mediaCount: false,\r\n    validated:  false\r\n  });\r\n\r\n  useEffect(() => {\r\n    setValidation( validateCreateAndUpdatePost( {content, mediaCount: images.length}) );\r\n  }, [images, content])\r\n\r\n  const inputFileRef = useRef(null);\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const onSubmit = async ( e )=>{\r\n    e.preventDefault();\r\n    createPost( new CPostModel({userID: authenticationService.currentUserValue.id, content,files: images.map(x=>x.file)}))\r\n          .then(handleResponse)\r\n          .then( res =>{\r\n            setImages([]);\r\n            setContent('');\r\n            if( afterUpdate )\r\n              afterUpdate();\r\n          })\r\n          .catch(console.warn);\r\n  };\r\n\r\n  const onChangeImage = async ( e )=>{\r\n    let { files } = e.target;\r\n\r\n    if( images.length + files.length > 4 )\r\n      return;\r\n\r\n    const filePairs = [];\r\n    for ( let i = 0; i < files.length; i++ ){\r\n      let file = files[i];\r\n      let preview = await fileToBase64( file );\r\n      filePairs.push( {\r\n        file,\r\n        preview\r\n      });\r\n    }\r\n\r\n    setImages( x=> [...x,...filePairs] );\r\n  };\r\n\r\n  const onChangeContent = e=>setContent(e.target.value);\r\n\r\n  const mediaBtnOnClick = () =>inputFileRef.current?.click();\r\n\r\n  return (\r\n\r\n    <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n        <div component='h4' variant='h2' className={classes.titleForm}>\r\n          <strong>Nuevo PosThis!</strong>\r\n        </div>\r\n        <TextField\r\n          variant='outlined'\r\n          margin='normal'\r\n          multiline\r\n          rows={3}\r\n          rowsMax={3}\r\n          fullWidth\r\n          label='Escribir...'\r\n          name='postContent'\r\n          autoComplete='postContent'\r\n          autoFocus\r\n          value = {content}\r\n          className={classes.postContent}\r\n          onChange ={onChangeContent}\r\n        />\r\n\r\n      <FormMediaGrid images={images} setImages={setImages}/>\r\n      <div className = {classes.cardBtn}>\r\n      \r\n        <Button\r\n          type='submit'\r\n          fullWidth\r\n          variant='contained'\r\n          color='primary'\r\n          className={classes.submit}\r\n          disabled = {!validation.validated}\r\n        >\r\n          Publicar\r\n        </Button>\r\n          \r\n        <input\r\n          accept='image/*' \r\n          className={classes.input} \r\n          type='file' \r\n          multiple \r\n          ref={inputFileRef} \r\n          onChange={onChangeImage}  \r\n        />\r\n        <label \r\n          htmlFor='icon-button-file' \r\n          className={classes.imageIcon}\r\n        >\r\n          <IconButton \r\n            color='primary' \r\n            aria-label='upload picture' \r\n            component='span' \r\n            onClick={mediaBtnOnClick}\r\n          >\r\n            <ImageIcon className={classes.imageIcon}/>\r\n          </IconButton>\r\n        </label>\r\n        \r\n        </div>\r\n    </form>\r\n       \r\n\r\n  );\r\n}\r\nexport default CreatePostForm;","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_api\\reposts.js",["352"],"import {  getURL  }     from '_config';\r\nimport { authHeader }   from '_helpers';\r\n\r\nimport RepostViewModel  from '_model/RepostViewModel';\r\n\r\n\r\n/**\r\n * @param   {Number} id\r\n */\r\nconst getReposts= async ( ) => {\r\n    return fetch( getURL( `api/reposts/Get` ) );\r\n};\r\n\r\n/**\r\n * @param {RepostViewModel} model\r\n */\r\nconst createRepost = async ( model ) => {\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        ...authHeader()\r\n    }\r\n\r\n    const options = {\r\n        method: 'POST',\r\n        body: JSON.stringify( model ),\r\n        headers: headers\r\n    };\r\n\r\n    return fetch( getURL( `api/reposts/Create` ), options );\r\n};\r\n\r\n/**\r\n * @param {CRepostModel} model\r\n */\r\n const deleteRepost = async ( model ) => {\r\n\r\n    const headers = {\r\n        ...authHeader()\r\n    }\r\n\r\n    const options = {\r\n        method: 'DELETE',\r\n        body: JSON.stringify( model ),\r\n        headers: headers\r\n    };\r\n\r\n    return fetch( getURL( `api/reposts/Delete/` ), options );\r\n};\r\n\r\nexport{\r\n    getReposts,\r\n    createRepost,\r\n    deleteRepost\r\n}","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Search\\UserCard.js",["353"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { \r\n    Grid,\r\n    Typography,\r\n    makeStyles,\r\n    Avatar,\r\n    Button\r\n} from '@material-ui/core';\r\nimport veryfied from 'assets/veryfied.svg';\r\n\r\nimport { routes } from '_utils';\r\n\r\nconst defaultImage = 'https://www.adobe.com/express/create/media_1900d303a701488626835756419ca3a50b83a2ae5.png?width=2000&format=webply&optimize=medium';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        border: `1.2px solid ${theme.palette.grey[300]}`,\r\n        padding: theme.spacing(2),\r\n        borderRadius: '3px',\r\n        maxWidth: 200,\r\n        textAlign: 'center',\r\n        backgroundColor: 'white',\r\n        marginBottom: theme.spacing(2),\r\n        alignItems: 'center',\r\n        marginLeft: '10px',\r\n        marginRight: '10px',\r\n    },\r\n    header:{\r\n        color: theme.palette.grey[400],\r\n        height: '15px',\r\n    },\r\n    avatar:{\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(9),\r\n    },\r\n    channelusername: {\r\n        fontWeight: theme.typography.fontWeightBold,\r\n    },\r\n    veryf:{\r\n        height: 20,\r\n    },\r\n    photoContainer:{\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    btn:{\r\n        textTransform: 'none',\r\n        paddingLeft: theme.spacing(6),\r\n        paddingRight: theme.spacing(6),\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n        textDecoration: 'none'\r\n    },\r\n}));\r\nconst ChannelPhoto = ({classes, user}) => \r\n{\r\n    return(\r\n        <div className ={classes.photoContainer}>\r\n            <Avatar className = {classes.avatar} alta='pic' src ={ user.profilePicPath }/>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nconst ChannelUsername = ({classes, user}) => {\r\n    return(\r\n\r\n        <Grid container justify='center' spacing={5}>\r\n            <Grid item xs={4}>\r\n                <Typography variant = 'body2' className={classes.channelusername}>{user.userName}</Typography>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n                <img alt='veryfied' src={veryfied} className={classes.veryf}/>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nconst SeeButton = ({classes, user}) => {\r\n    return(\r\n\r\n        <Link to={routes.getProfile(user.userId)}>\r\n            <Button color='primary' variant = 'contained' size = 'small' className={classes.btn}>\r\n                Ver Perfil\r\n            </Button>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport const UserCard = ( {user} ) => {\r\n    const classes = useStyles();\r\n    \r\n    return(\r\n        <Grid container direction = 'column' className = {classes.root}>\r\n            <ChannelPhoto  classes = {classes} user={user}/>\r\n            <ChannelUsername  classes = {classes} user={user}/>\r\n            <SeeButton classes = {classes} user={user}/>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default UserCard;","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_api\\replies.js",["354","355"],"import {  getURL  }     from '_config';\r\nimport { authHeader }   from '_helpers';\r\n\r\nimport { CReplyModel, UReplyModel } from '_model';\r\n\r\n/**\r\n * @param   {Number} id\r\n */\r\nconst getReplies= async ( ) => {\r\n\r\n    const headers = {\r\n        ...authHeader(),\r\n    }\r\n\r\n    const options = {\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/replies/Get` ), options );\r\n};\r\n\r\n/**\r\n * @param   {Number} id\r\n */\r\n const getReply = async ( id ) => {\r\n\r\n    const headers = {\r\n        ...authHeader(),\r\n    }\r\n\r\n    const options = {\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/replies/Get/${id}` ), options );\r\n};\r\n\r\n/**\r\n * @param {CReplyModel} model\r\n */\r\nconst createReply = ( model ) => {\r\n\r\n    const headers = {\r\n        ...authHeader(),\r\n    }\r\n\r\n    let fd = new FormData();\r\n    fd.append('UserID', model.userID    );\r\n    fd.append('PostID', model.postID    );\r\n    fd.append('Content', model.content  );\r\n\r\n    for( let f of model.files ){\r\n        fd.append('Files', f );\r\n    }\r\n\r\n    const options = {\r\n        method: 'POST',\r\n        body: fd,\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/replies/Create` ), options );\r\n};\r\n\r\n/**\r\n * @param {Number}      id\r\n * @param {UReplyModel} model\r\n */\r\n const updateReply = ( id, model ) => {\r\n\r\n    const headers = {\r\n        ...authHeader()\r\n    }\r\n\r\n    let fd = new FormData();\r\n    fd.append('Content', model.content  );\r\n\r\n    for( let did of model.deleted ){\r\n        fd.append('Deleted', did );\r\n    }\r\n\r\n    for( let f of model.files ){\r\n        fd.append('Files', f );\r\n    }\r\n\r\n    const options = {\r\n        method: 'PUT',\r\n        body: fd,\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/replies/Update/${id}` ), options );\r\n};\r\n\r\n/**\r\n * @param {Number} id\r\n */\r\n const deleteReply = async ( id ) => {\r\n\r\n    const headers = {\r\n        ...authHeader()\r\n    };\r\n\r\n    const options = {\r\n        method: 'DELETE',\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/replies/Delete/${id}` ), options );\r\n};\r\n\r\nexport{\r\n    getReplies,\r\n    getReply,\r\n    createReply,\r\n    updateReply,\r\n    deleteReply\r\n}","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\RepostViewModel.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\CPostModel.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\UReplyModel.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\UPostModel.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_config\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Media\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_config\\config.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Media\\MediaGrid.js",["356","357"],"import React from 'react';\r\n\r\nimport { makeStyles }   from '@material-ui/core/styles';\r\nimport Grid             from '@material-ui/core/Grid';\r\nimport CancelIcon       from '@material-ui/icons/Cancel';\r\n\r\nconst useMediaGridStyles = makeStyles((theme)=>({\r\n  gridHeight: {\r\n    height: '400px',\r\n    overflow: 'hidden',\r\n    borderRadius: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nconst useSubgridStyles = makeStyles((theme) => ({\r\n  subgridFull:{\r\n    display:  'flex',\r\n    width:    '100%',\r\n    height:   '100%',\r\n    flexDirection: 'column'\r\n  },\r\n  subgridHalf:{\r\n    display:  'flex',\r\n    width:    '50%',\r\n    height:   '100%',\r\n    flexDirection: 'column'\r\n  },\r\n  subGridNone:{\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst useMediaContainerStyles= makeStyles((theme) => ({\r\n  mediaContainer:{\r\n    position:         'relative',\r\n    display:          'inline-block',\r\n    flex:             '1 1 0',\r\n    width:            '100%',\r\n    height:           '100%',\r\n    overflow:         'hidden',\r\n    backgroundColor:  '#333333'\r\n  },\r\n  mediaFit: {\r\n    display:    'inline-block',\r\n    width:      '100%',\r\n    height:     '100%',\r\n    objectFit:  'cover'\r\n  },\r\n  deleteIcon:{\r\n    position: 'absolute',\r\n    top:      0,\r\n    right:    0,\r\n    color:    'red',\r\n    '&:hover': {\r\n      color: 'white'\r\n    },\r\n    \r\n  }\r\n}));\r\n\r\nconst MediaContainer = (props) => {\r\n\r\n  const { media, state, setState } = props;\r\n  const classes = useMediaContainerStyles();\r\n\r\n  const onClickDelete = ()=>{\r\n    const index = state.medias.indexOf(media);\r\n    if ( index === -1 )\r\n      return;\r\n\r\n    setState( x =>{\r\n      let copy = {...x};\r\n      copy.deleted = [...copy.deleted, copy.medias[index].mediaID];\r\n      copy.medias = copy.medias.filter((elem, i)=> i !== index);\r\n      return copy;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.mediaContainer}>\r\n      {\r\n        media.isVideo ?\r\n        (\r\n          <video className={classes.mediaFit} controls>\r\n              <source src={media.path} type={media.mime}/>\r\n          </video>\r\n        )\r\n        :\r\n        (<img src={media.path} className={classes.mediaFit}/>)\r\n      }\r\n      {\r\n        state.editMode &&\r\n          <CancelIcon className={classes.deleteIcon} onClick={onClickDelete}/>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SubGrid = ( props ) => {\r\n\r\n  const {children, size} = props;\r\n  const classes = useSubgridStyles();\r\n\r\n  if(children.length === 0)\r\n    return (<></>);\r\n\r\n  let subgridClass;\r\n  switch( size ){\r\n    case 'f':\r\n      subgridClass = classes.subgridFull;\r\n      break;\r\n    case 'h':\r\n      subgridClass = classes.subgridHalf;\r\n      break;  \r\n    case 'n':\r\n      subgridClass = classes.subGridNone;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={subgridClass}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const MediaGrid = ( props ) => {\r\n\r\n  const classes = useMediaGridStyles();\r\n  const { media, ...temp } = props;\r\n\r\n  if ( media?.length === 0 )\r\n    return (<></>);\r\n\r\n  const n = media.length;\r\n\r\n  return (\r\n    <Grid container className={classes.gridHeight}>\r\n      <SubGrid size={ n === 1 ? 'f' : 'h' }>\r\n        { media[0]                && <MediaContainer media={media[0]} {...temp}/>}\r\n        { ( n === 4 && media[2] ) && <MediaContainer media={media[2]} {...temp}/>}\r\n      </SubGrid>\r\n      <SubGrid size={ n > 1 ? 'h' : 'n' }>\r\n        { ( n > 1 && media[1] )   && <MediaContainer media={media[1]} {...temp}/>}\r\n        { ( n > 2 && ( n === 3 ? media[2] : media[3] )) && <MediaContainer media={ n === 3 ? media[2] : media[3]} {...temp}/>}\r\n      </SubGrid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MediaGrid;","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Media\\FormMediaGrid.js",["358","359","360","361"],"import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    IconButton\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n    Cancel as CancelIcon\r\n} from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    previewGrid: {\r\n        display:        'flex',\r\n        width:          '100%',\r\n        justifyContent: 'center',\r\n        flexWrap:       'wrap',\r\n        borderRadius:   '10px',\r\n        boxShadow:      'black 0px 0px 2px',\r\n        overflow:       'hidden',\r\n      },\r\n      previewContainer:{\r\n        display:    'inline-block',\r\n        flexGrow:   '1',\r\n        width:      '50%',\r\n        height:     '180px',\r\n      },\r\n      previewImage:{\r\n        postion:    'absolute',\r\n        top:        '0',\r\n        left:       '0',\r\n        display:    'inline-block',\r\n        width:      '100%',\r\n        height:     '100%',\r\n        objectFit:  'cover'\r\n      },\r\n      closePreviewIcon:{\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        root:{\r\n          '&:hover $icon': {\r\n            color: 'blue',\r\n          }\r\n        }\r\n      }\r\n}));\r\n\r\nconst GridImage = ( props ) => {\r\n\r\n  const { classes, image, index, images, setImages } = props;\r\n  const { preview, file } = image;\r\n\r\n  const deleteImage = ()=>{\r\n    const i = images.indexOf( image );\r\n    setImages( x => x.filter( (elem,index)=> index != i ) );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.previewContainer}>\r\n      <IconButton className={classes.closePreviewIcon} color='secondary' aria-label='upload picture' component='span' onClick={deleteImage}>\r\n        <CancelIcon/>\r\n      </IconButton>\r\n      <img src={preview} className={classes.previewImage}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const FormMediaGrid = (props) =>{\r\n\r\n    const classes = useStyles();\r\n    const { images, setImages } = props;\r\n\r\n    return (\r\n        <div className={classes.previewGrid}>\r\n            {\r\n              images.map( (image, i)=>( <GridImage\r\n                                          key={i}\r\n                                          index={i}\r\n                                          image={image}\r\n                                          images={images}\r\n                                          setImages={setImages}\r\n                                          classes={classes}\r\n                                        />))\r\n            }\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default FormMediaGrid;","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\CReplyModel.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\FollowViewModel.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\SearchRequestModel.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\UpdateUserViewModel.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\LikeViewModel.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\SignUpModel.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_model\\LogInModel.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_api\\posts.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_api\\likes.js",["362"],"import {  getURL  }     from '_config';\r\nimport { authHeader } from '_helpers';\r\n\r\nimport LikeViewModel from '_model/LikeViewModel';\r\n\r\n/**\r\n * @param   {Number} id\r\n */\r\nconst getLikes= async ( ) => {\r\n    let res = await fetch( getURL( `api/likes/Get` ) );\r\n    return res.json();\r\n};\r\n\r\n/**\r\n * @param   {Number} id\r\n */\r\n const getLike = async ( id ) => {\r\n    let res = await fetch( getURL( `api/likes/Get/${id}` ) );\r\n    return res.json();\r\n};\r\n\r\n/**\r\n * @param {LikeViewModel} model\r\n */\r\nconst createLike = ( model ) => {\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        ...authHeader()\r\n    }\r\n\r\n    const options = {\r\n        method: 'POST',\r\n        body: JSON.stringify( model ),\r\n        headers: headers\r\n    };\r\n\r\n    return fetch( getURL( `api/likes/Create` ), options );;\r\n};\r\n\r\n/**\r\n * @param {LikeViewModel} model\r\n */\r\n const deleteLike = ( model ) => {\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        ...authHeader()\r\n    }\r\n\r\n    const options = {\r\n        method: 'DELETE',\r\n        body: JSON.stringify( model ),\r\n        headers: headers\r\n    };\r\n\r\n    return fetch( getURL( `api/likes/Delete` ), options );\r\n};\r\n\r\nexport{\r\n    getLikes,\r\n    getLike,\r\n    createLike,\r\n    deleteLike\r\n}","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_api\\follow.js",["363"],"import {  getURL  }         from '_config';\r\nimport { authHeader }       from '_helpers'\r\nimport { FollowViewModel }  from '_model';\r\n\r\n/**\r\n * @param   {Number} id\r\n */\r\nconst getFollowers= async ( id ) => {\r\n\r\n    const headers = {\r\n        ...authHeader()\r\n    }\r\n\r\n    const options = {\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/follow/GetFollowers/${id}` ), options );\r\n}\r\n\r\n/**\r\n * @param   {Number} id\r\n */\r\nconst getFollowing = async ( id ) => {\r\n\r\n    const headers = {\r\n        ...authHeader()\r\n    }\r\n\r\n    const options = {\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/follow/GetFollowing/${id}` ), options );\r\n};\r\n\r\n/**\r\n * @param   {Number} id\r\n */\r\nconst getFollowersCount = async ( id ) => {\r\n\r\n    const headers = {\r\n        ...authHeader()\r\n    }\r\n\r\n    const options = {\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/follow/GetFollowersCount/${id}` ), options );\r\n};\r\n\r\n/**\r\n * @param   {Number} id\r\n */\r\nconst GetFollowingCount = async ( id ) => {\r\n\r\n    const headers = {\r\n        ...authHeader()\r\n    }\r\n\r\n    const options = {\r\n        headers\r\n    };\r\n\r\n    return fetch( getURL( `api/follow/GetFollowingCount/${id}` ), options);\r\n};\r\n\r\n/**\r\n * @param {FollowViewModel} model\r\n */\r\nconst createFollow = async ( model ) => {\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        ...authHeader()\r\n    }\r\n\r\n    const options = {\r\n        method: 'POST',\r\n        body: JSON.stringify( model ),\r\n        headers: headers\r\n    };\r\n\r\n    return fetch( getURL( `api/follow/Create` ), options );\r\n};\r\n\r\n/**\r\n * @param {FollowViewModel} model\r\n */\r\nconst deleteFollow = async ( model ) =>{\r\n\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        ...authHeader()\r\n    }\r\n\r\n    const options = {\r\n        method: 'DELETE',\r\n        body: JSON.stringify( model ),\r\n        headers\r\n    };\r\n    \r\n    return fetch( getURL( `api/follow/Delete` ), options );\r\n};\r\n\r\nexport{\r\n    getFollowers,\r\n    getFollowing,\r\n    getFollowersCount,\r\n    GetFollowingCount,\r\n    createFollow,\r\n    deleteFollow\r\n}","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Post\\ReplyCard.js",["364","365","366","367","368","369"],"import React, { useState, useRef}  from 'react';\r\nimport { Link }                    from 'react-router-dom';\r\n\r\nimport { makeStyles }     from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Typography,\r\n  IconButton,\r\n  Button,\r\n  Avatar,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  Favorite as FavoriteIcon,\r\n  QuestionAnswer as QuestionAnswerIcon,\r\n  ReplyAll       as ReplyAllIcon,\r\n  Save           as SaveIcon,\r\n  Image          as ImageIcon,\r\n\r\n} from '@material-ui/icons';\r\n\r\nimport { MediaGrid }                from 'components/Media';\r\n\r\nimport { authenticationService }    from '_services';\r\nimport { handleResponse, history }  from '_helpers';\r\nimport { fileToBase64, routes }     from '_utils';\r\nimport { updateReply, deleteReply } from '_api';\r\nimport { UReplyModel }              from '_model';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '600px',\r\n    marginTop: theme.spacing(0),\r\n    borderBottomStyle: 'solid',\r\n    borderBottomColor: 'white',\r\n    borderBottomWidth: theme.spacing(0.3),\r\n    backgroundColor: '#1b2452',\r\n    borderRadius: theme.spacing( 0 ),\r\n    boxShadow:        'black 1px 1px 8px',\r\n  },\r\n  rootFirst:{\r\n    width: '100%',\r\n    maxWidth: '600px',\r\n    marginTop: theme.spacing(0),\r\n    borderBottomStyle: 'solid',\r\n    borderBottomColor: 'white',\r\n    borderBottomWidth: theme.spacing(0.3),\r\n    backgroundColor: '#1b2452',\r\n    borderRadius: theme.spacing( 1, 1, 0, 0 ),\r\n    boxShadow:        'black 1px 1px 8px',\r\n  },\r\n  rootLast:{\r\n    width: '100%',\r\n    maxWidth: '600px',\r\n    marginTop: theme.spacing(0),\r\n    borderBottomStyle: 'solid',\r\n    borderBottomColor: 'white',\r\n    borderBottomWidth: theme.spacing(0),\r\n    backgroundColor: '#1b2452',\r\n    borderRadius: theme.spacing( 0, 0, 1, 1 ),\r\n    boxShadow:        'black 1px 1px 8px',\r\n  },\r\n  rootOnly:{\r\n    width: '100%',\r\n    maxWidth: '600px',\r\n    marginTop: theme.spacing(0),\r\n    borderBottomStyle: 'solid',\r\n    borderBottomColor: 'white',\r\n    borderBottomWidth: theme.spacing(0),\r\n    backgroundColor: '#1b2452',\r\n    borderRadius: theme.spacing( 2 ),\r\n    boxShadow:        'black 1px 1px 8px',\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  title: {\r\n    color: 'white',\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  content: {\r\n    color: 'white',\r\n    marginLeft: theme.spacing(7),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  contentNoMedia:{\r\n    color:        'white',\r\n    marginLeft:   theme.spacing(7),\r\n    marginBottom: theme.spacing(1),\r\n    fontSize:     '1.3rem',\r\n    textIndent:   '0',\r\n    whiteSpace:   'pre-wrap'\r\n  },\r\n  contentEdit: {\r\n    color:          'white',\r\n    marginBottom:   theme.spacing(1),\r\n    background:     'transparent',\r\n    outline:        'none',\r\n    width:          '100%',\r\n    height:         '70px',\r\n    resize:         'none',\r\n    textDecoration: 'underline',\r\n    boxSizing:      'border-box',\r\n    whiteSpace:     'pre-wrap'\r\n  },\r\n  input:{\r\n    display: 'none'\r\n  },\r\n  displayTitle:{\r\n    display: 'inline-flex'\r\n  },\r\n  displaybtn:{\r\n    textAlign: 'right',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  imgPost:{\r\n    maxWidth: 450,\r\n  },\r\n  contImg:{\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  contMedia:{\r\n    display:        'flex',\r\n    flexDirection:  'column',\r\n    flexWrap:       'wrap'\r\n  },\r\n  date:{\r\n    fontSize: '0.7rem',\r\n    color:    'gray',\r\n    display:  'block'\r\n  },\r\n  avatar:{\r\n    backgroundColor: '#333333',\r\n    border: '1px solid #f28a9a'\r\n  },\r\n  cardBtn: {\r\n    alignItems:     'center',\r\n    justifyContent: 'space-around',\r\n    color:          'white',\r\n  },\r\n  saveIcon:{\r\n    color: '#33eaff',\r\n  },\r\n  mediaIcon:{\r\n    color: '#ea5970'\r\n  },\r\n  deleteBtn:{\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport const ReplyCard = ( props ) => {\r\n\r\n  const { reply, first, last }    = props;\r\n  const classes = useStyles();\r\n  const inputFileRef = useRef();\r\n\r\n  const [ state, setState ] = useState({\r\n    editMode:         false,\r\n    content:          reply.content,\r\n    originalContent:  reply.content,\r\n    medias:           reply.medias,\r\n    originalMedias:   reply.medias,\r\n    deleted:          [],\r\n    newMedias:        []\r\n  });\r\n  const [del, setDel] = useState(false);\r\n\r\n  const temp = { state, setState};\r\n\r\n  let cardRootClass;\r\n  if( first && last ){\r\n    cardRootClass = classes.rootOnly;\r\n  }\r\n  else if( first ){\r\n    cardRootClass = classes.rootFirst;\r\n  }\r\n  else if( last ){\r\n    cardRootClass = classes.rootLast;\r\n  }\r\n  else{\r\n    cardRootClass = classes.root;\r\n  }\r\n\r\n  const dateString = new Date( Date.parse( reply.date ) ).toLocaleString();\r\n\r\n  const onClickSave = ()=>{\r\n\r\n    let model = new UReplyModel({\r\n      content: state.content,\r\n      deleted: state.deleted,\r\n      files:   state.newMedias });\r\n\r\n    updateReply( reply.replyID, model)\r\n      .then( handleResponse )\r\n      .then( res => {\r\n        let { data } = res;\r\n\r\n        setState(x=>{\r\n          let copy              = {...x};\r\n          copy.editMode         = false;\r\n          copy.originalContent  = data.content;\r\n          copy.medias           = data.medias;\r\n          copy.originalMedias   = data.medias;\r\n          return copy;\r\n        });\r\n      })\r\n      .catch(console.warn);\r\n  };\r\n\r\n  const onChangeContent = e=>{\r\n    setState( x =>{\r\n      let copy = {...x};\r\n      copy.content = e.target.value;\r\n      return copy;\r\n    });\r\n  };\r\n\r\n  const onChangeImages = async e=>{\r\n    let {files} = e.target;\r\n\r\n    if( state.medias.length + files.length > 4 )\r\n      return;\r\n\r\n    const mediaInfo    = [];\r\n    const newMediaFiles = [];\r\n    for ( let i = 0; i < files.length; i++ ){\r\n      let file = files[i];\r\n      let preview = await fileToBase64( file );\r\n      \r\n      const mediaViewModel = {\r\n        mediaID:  null,\r\n        mime:     file.type,\r\n        path:     preview,\r\n        isVideo:  file.type.includes('video')\r\n      };\r\n\r\n      mediaInfo     .push( mediaViewModel );\r\n      newMediaFiles .push( file );\r\n    }\r\n\r\n    setState( x=>{\r\n      let copy = {...x};\r\n      copy.medias = [...copy.medias, ...mediaInfo];\r\n      copy.newMedias = [...copy.newMedias, ...newMediaFiles];\r\n      return copy;\r\n    });\r\n  };\r\n\r\n  const onClickFileOpen = ()=>inputFileRef.current?.click();\r\n\r\n  const onToggleEditMode = ()=>{\r\n    setState( x =>{\r\n      let copy = {...x};\r\n      copy.editMode = !copy.editMode;\r\n\r\n      if( copy.editMode === false ){\r\n        copy.medias     = [...copy.originalMedias];\r\n        copy.content    = copy.originalContent;\r\n        copy.deleted    = [];\r\n        copy.newMedias  = [];\r\n      }\r\n      return copy;\r\n    })\r\n  };\r\n\r\n  const onClickDelete = ()=>{\r\n    if(window.confirm('Seguro que quiere borrar la respuesta')){\r\n      deleteReply(reply.replyID)\r\n      .then(handleResponse)\r\n      .then( res =>{\r\n        setDel( true );\r\n      })\r\n      .catch(console.warn);\r\n    }\r\n  };\r\n\r\n  if( del ){\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <Card className={cardRootClass}>\r\n        <CardContent>\r\n\r\n          <div className={classes.displayTitle}>\r\n            <Link to={routes.getProfile(reply.publisherID)}>\r\n              <Avatar className={classes.avatar} src={reply.publisherProfilePic}/>\r\n            </Link>\r\n\r\n            <Link to={routes.getProfile(reply.publisherID)}>\r\n              <Typography variant='h6' component='h2' className={classes.title}>\r\n                <strong>{reply.publisherUserName} {'@'+reply.publisherTag}</strong>\r\n              </Typography>\r\n            </Link>\r\n            \r\n\r\n          </div>\r\n          <p className={classes.date}>{ dateString.slice( 0, dateString.length - 6 ) } { dateString.slice(dateString.length-3) }</p>\r\n\r\n          {\r\n            state.editMode ? \r\n            (<textarea className={classes.contentEdit} value={state.content} onChange={onChangeContent}></textarea>)\r\n            :\r\n            (<Typography variant='body2' component='p' className={state.medias.length !== 0 ? classes.content : classes.contentNoMedia} >{state.originalContent}</Typography>)\r\n          }\r\n          \r\n          {\r\n            state.editMode &&\r\n            <>\r\n            <input accept='image/*' className={classes.input} type='file' multiple ref={inputFileRef} onChange={onChangeImages}/>\r\n              <IconButton onClick={onClickFileOpen}>\r\n                <ImageIcon className={classes.mediaIcon}/>\r\n              </IconButton>\r\n            </>\r\n          }\r\n\r\n          <div className={classes.contMedia}>\r\n            <MediaGrid media={ state.medias } {...temp}/>\r\n          </div>\r\n          \r\n          <div  className={classes.displaybtn}>\r\n          {\r\n            (authenticationService.currentUserValue.id === reply.publisherID)\r\n            && \r\n            <>\r\n              <Button \r\n                variant='contained' \r\n                color='secondary' \r\n                onClick={onClickDelete}\r\n                className={classes.deleteBtn}\r\n              >\r\n                  Eliminar\r\n              </Button>\r\n              <Button \r\n                variant='contained' \r\n                color='secondary' \r\n                onClick={onToggleEditMode}\r\n              >\r\n                { state.editMode ? 'Cancelar' : 'Editar' }\r\n              </Button>\r\n            </>\r\n          }\r\n          </div>\r\n        </CardContent>\r\n\r\n        <CardActions disableSpacing className={classes.cardBtn}>\r\n          {\r\n            (authenticationService.currentUserValue.id === reply.publisherID && state.editMode)\r\n            && \r\n            <div>\r\n              <IconButton onClick   = { onClickSave }>\r\n                <SaveIcon className = { classes.saveIcon}/>\r\n              </IconButton>\r\n            </div>\r\n          }\r\n        </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ReplyCard;","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Post\\PostCard.js",["370","371","372"],"import React, { useState, useRef }  from 'react';\r\nimport { Link }                     from 'react-router-dom';\r\n\r\nimport { makeStyles }               from '@material-ui/core/styles';\r\nimport { red }                      from '@material-ui/core/colors';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Typography,\r\n  IconButton,\r\n  Button,\r\n  Avatar,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  Favorite as FavoriteIcon,\r\n  QuestionAnswer as QuestionAnswerIcon,\r\n  ReplyAll       as ReplyAllIcon,\r\n  Save           as SaveIcon,\r\n  Image          as ImageIcon,\r\n\r\n} from '@material-ui/icons';\r\n\r\nimport { MediaGrid }                from 'components/Media';\r\n\r\nimport { handleResponse }  from '_helpers';\r\nimport { authenticationService }    from '_services';\r\nimport { routes, fileToBase64 }     from '_utils';\r\n\r\nimport { \r\n  updatePost,\r\n  deletePost,\r\n  createLike,\r\n  deleteLike,\r\n  createRepost,\r\n  deleteRepost\r\n} from '_api';\r\n\r\nimport{\r\n  UPostModel,\r\n  LikeViewModel,\r\n  RepostViewModel\r\n} from '_model';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width:            '100%',\r\n    maxWidth:         '600px',\r\n    marginTop:         theme.spacing( 3 ),\r\n    backgroundColor:  '#2b387f',\r\n    boxShadow:        'black 1px 1px 8px',\r\n    borderRadius:     theme.spacing( 1, 1, 0, 0 ),\r\n    [theme.breakpoints.down('sm')]:{\r\n    }\r\n  },\r\n  media: {\r\n    height: '140px',\r\n  },\r\n  cardBtn: {\r\n    alignItems:     'center',\r\n    justifyContent: 'space-around',\r\n    color:          'white',\r\n  },\r\n  repostText:{\r\n    color:    'white',\r\n    padding:  theme.spacing(2, 4)\r\n  },\r\n  title: {\r\n    display:        'inline-block',\r\n    width:          'auto',\r\n    color:          'white',\r\n    marginLeft:     theme.spacing(2),\r\n    textDecoration: 'none',\r\n    '&:visited':{\r\n      color: 'white',\r\n    }\r\n  },\r\n  content: {\r\n    color:        'white',\r\n    marginLeft:   theme.spacing(7),\r\n    marginBottom: theme.spacing(1),\r\n    textIndent:   '0',\r\n    whiteSpace:   'pre-wrap'\r\n  },\r\n  contentNoMedia:{\r\n    color:        'white',\r\n    marginLeft:   theme.spacing(7),\r\n    marginBottom: theme.spacing(1),\r\n    fontSize:     '1.3rem',\r\n    textIndent:   '0',\r\n    whiteSpace:   'pre-wrap'\r\n  },\r\n  contentEdit: {\r\n    color:          'white',\r\n    marginBottom:   theme.spacing(1),\r\n    background:     'transparent',\r\n    outline:        'none',\r\n    width:          '100%',\r\n    height:         '70px',\r\n    resize:         'none',\r\n    textDecoration: 'underline',\r\n    boxSizing:      'border-box',\r\n    whiteSpace:     'pre-wrap'\r\n  },\r\n  likeIcon:{\r\n    color: red[500],\r\n  },\r\n  commentIcon:{\r\n    color: '#ea5970',\r\n  },\r\n  repostIcon:{\r\n    color: '#f28a9a',\r\n  },\r\n  saveIcon:{\r\n    color: '#33eaff',\r\n  },\r\n  mediaIcon:{\r\n    color: '#ea5970'\r\n  },\r\n  displayTitle:{\r\n    display: 'inline-flex'\r\n  },\r\n  imgPost:{\r\n    maxWidth: '450',\r\n  },\r\n  contMedia:{\r\n    display:        'flex',\r\n    flexDirection:  'column',\r\n    flexWrap:       'wrap'\r\n  },\r\n  contImg:{\r\n    display:      'inline-block',\r\n    flexGrow:     1,\r\n    alignItems:   'center',\r\n    textAlign:    'center',\r\n  },\r\n  mediaMask:{\r\n    display:      'inline-block',\r\n    position:     'relative',\r\n    width:        '100%',\r\n    height:       '400px',\r\n    overflow:     'hidden',\r\n    [theme.breakpoints.down('sm')]:{\r\n      height: '300px'\r\n    }\r\n  },\r\n  media:{\r\n    display:    'inline-block',\r\n    position:   'absolute',\r\n    top:        '50%',\r\n    left:       '50%',\r\n    transform:  'translate( -50%, -50%)',\r\n    width:      '100%',\r\n  },\r\n  usertag:{\r\n    color: 'white',\r\n  },\r\n  displaybtn:{\r\n    textAlign: 'right',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  input:{\r\n    display: 'none'\r\n  },\r\n  date:{\r\n    fontSize: '0.7rem',\r\n    color:    'gray',\r\n    display:  'block'\r\n  },\r\n  grayIcon:{\r\n    color: 'gray'\r\n  },\r\n  avatar:{\r\n    backgroundColor: '#333333',\r\n    border: '1px solid #f28a9a'\r\n  },\r\n  repostUserLink:{\r\n    color: 'white',\r\n    textDecoration: 'none',\r\n    '&:visited':{\r\n      color: 'white'\r\n    },\r\n    '&:hover':{\r\n      color: '##ea5970'\r\n    }\r\n  },\r\n  deleteBtn:{\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport const PostCard = ( props ) => {\r\n\r\n  const { history } = props;\r\n\r\n  const [ post, setPost ] = useState( props.post );\r\n\r\n  const [ state, setState ] = useState({\r\n    editMode:         false,\r\n    content:          post.content,\r\n    originalContent:  post.content,\r\n    medias:           post.medias,\r\n    originalMedias:   post.medias,\r\n    deleted:          [],\r\n    newMedias:        []\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const inputFileRef = useRef();\r\n\r\n  const temp = { state, setState };\r\n\r\n  const onClickSave = ()=>{\r\n    updatePost( post.postID,  new UPostModel({content: state.content, deleted: state.deleted, files: state.newMedias}))\r\n      .then( handleResponse )\r\n      .then( res =>{\r\n\r\n        let { data } = res;\r\n\r\n        setState(x=>{\r\n          let copy              = {...x};\r\n          copy.editMode         = false;\r\n          copy.originalContent  = copy.content;\r\n          copy.medias           = data.medias;\r\n          copy.originalMedias   = data.medias;\r\n          return copy;\r\n        });\r\n      })\r\n      .catch( res =>{\r\n        console.log('err',res)\r\n      });\r\n  };\r\n  \r\n  const onChangeContent = e=>{\r\n      setState( x =>{\r\n        let copy = {...x};\r\n        copy.content = e.target.value;\r\n        return copy;\r\n      });\r\n  };\r\n\r\n  const onChangeImages = async e=>{\r\n    let {files} = e.target;\r\n\r\n    if( state.medias.length + files.length > 4 )\r\n      return;\r\n\r\n    const mediaInfo    = [];\r\n    const newMediaFiles = [];\r\n    for ( let i = 0; i < files.length; i++ ){\r\n      let file = files[i];\r\n      let preview = await fileToBase64( file );\r\n\r\n      const mediaViewModel = {\r\n        mediaID:  null,\r\n        mime:     file.type,\r\n        path:     preview,\r\n        isVideo:  file.type.includes('video')\r\n      };\r\n\r\n      mediaInfo     .push( mediaViewModel );\r\n      newMediaFiles .push( file );\r\n    }\r\n\r\n    setState( x=>{\r\n      let copy = {...x};\r\n      copy.medias = [...copy.medias, ...mediaInfo];\r\n      copy.newMedias = [...copy.newMedias, ...newMediaFiles];\r\n      return copy;\r\n    });\r\n  };\r\n\r\n  const onClickFileOpen = ()=>inputFileRef.current?.click();\r\n\r\n  const onClickLike = ()=>{\r\n\r\n    const model = new LikeViewModel({\r\n      postID: post.postID, \r\n      userID: authenticationService.currentUserValue.id \r\n     });\r\n\r\n    if( post.isLiked ){\r\n      deleteLike(model)\r\n       .then(handleResponse)\r\n       .then( res =>{\r\n         const { data } = res;\r\n         setPost( data );\r\n         setState( x=>{\r\n          let copy = {...x};\r\n          copy.content         = data.content;\r\n          copy.originalContent = data.content;\r\n          copy.medias          = data.medias;\r\n          copy.originalMedias  = data.medias;\r\n          return copy;\r\n        });\r\n       })\r\n       .catch(console.warn)\r\n    }\r\n    else{\r\n      createLike(model)\r\n        .then(handleResponse)\r\n        .then(res=>{\r\n          const { data } = res;\r\n          setPost( data );\r\n          setState( x=>{\r\n            let copy = {...x};\r\n            copy.content         = data.content;\r\n            copy.originalContent = data.content;\r\n            copy.medias          = data.medias;\r\n            copy.originalMedias  = data.medias;\r\n            return copy;\r\n          });\r\n        })\r\n        .catch(console.warn);\r\n    }\r\n  };\r\n\r\n  const onClickRepost = ()=>{\r\n\r\n    const model = new RepostViewModel({\r\n      postID: post.postID, \r\n      userID: authenticationService.currentUserValue.id \r\n     });\r\n\r\n    if( post.isReposted){\r\n      deleteRepost(model)\r\n      .then(handleResponse)\r\n      .then ( res =>{\r\n        const { data } = res;\r\n        setPost( data );\r\n        setState( x=>{\r\n          let copy = {...x};\r\n          copy.content         = data.content;\r\n          copy.originalContent = data.content;\r\n          copy.medias          = data.medias;\r\n          copy.originalMedias  = data.medias;\r\n          return copy;\r\n        });\r\n      })\r\n      .catch(console.warn);\r\n    }\r\n    else{\r\n      createRepost(model)\r\n      .then(handleResponse)\r\n      .then ( res =>{\r\n        const { data } = res;\r\n        setPost( data );\r\n        setState( x=>{\r\n          let copy = {...x};\r\n          copy.content         = data.content;\r\n          copy.originalContent = data.content;\r\n          copy.medias          = data.medias;\r\n          copy.originalMedias  = data.medias;\r\n          return copy;\r\n        });\r\n      })\r\n      .catch(console.warn);\r\n    }\r\n  };\r\n\r\n  const onToggleEditMode = ()=>{\r\n    setState( x =>{\r\n      let copy = {...x};\r\n      copy.editMode = !copy.editMode;\r\n\r\n      if( copy.editMode === false ){\r\n        copy.medias     = [...copy.originalMedias];\r\n        copy.content    = copy.originalContent;\r\n        copy.deleted    = [];\r\n        copy.newMedias  = [];\r\n      }\r\n      return copy;\r\n    })\r\n  };\r\n\r\n  const onClickDelete = ()=>{\r\n    if(window.confirm('Seguro que quiere borrar el post')){\r\n      deletePost(post.postID)\r\n      .then(handleResponse)\r\n      .then(res=>{\r\n        history.replace(routes.feed);\r\n      })\r\n      .catch(console.warn);\r\n    }\r\n  };\r\n\r\n  const dateString = new Date(Date.parse( post.date )).toLocaleString();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {\r\n        post.isRepost &&\r\n        <Typography variant='body2' className={classes.repostText}>\r\n          <Link to={routes.getProfile(post.publisherID)} className={classes.repostUserLink}>{post.reposterUserName}</Link> reposted this!\r\n        </Typography>\r\n      }\r\n      <CardContent>\r\n          <div className={classes.displayTitle}>\r\n            <Link to={routes.getProfile(post.publisherID)}>\r\n              <Avatar src={post.publisherProfilePic} className={classes.avatar}/>\r\n            </Link>\r\n            <Link to={routes.getProfile(post.publisherID)}>\r\n              <Typography variant='h6' component='h2' className={classes.title}>\r\n                <strong>{post.publisherUserName} {'@'+post.publisherTag}</strong>\r\n              </Typography>\r\n            </Link>\r\n          </div>\r\n          <p className={classes.date}>{ dateString.slice( 0, dateString.length - 6 ) } { dateString.slice(dateString.length-3) }</p>\r\n          \r\n          {\r\n            state.editMode ? \r\n            (<textarea className={classes.contentEdit} value={state.content} onChange={onChangeContent}></textarea>)\r\n            :\r\n            (<Typography variant='body2' component='p' className={state.medias.length !== 0 ? classes.content : classes.contentNoMedia} >{state.originalContent}</Typography>)\r\n          }\r\n          \r\n          {\r\n            state.editMode &&\r\n            <>\r\n            <input accept='image/*' className={classes.input} type='file' multiple ref={inputFileRef} onChange={onChangeImages}/>\r\n              <IconButton onClick={onClickFileOpen}>\r\n                <ImageIcon className={classes.mediaIcon}/>\r\n              </IconButton>\r\n            </>\r\n          }\r\n          <div className={classes.contMedia}>\r\n            <MediaGrid media={ state.editMode ? state.medias : state.originalMedias } {...temp}/>\r\n          </div>\r\n\r\n          <div  className={classes.displaybtn}>\r\n          {\r\n            (authenticationService.currentUserValue.id === post.publisherID)\r\n            && \r\n            <>\r\n              <Button \r\n                variant='contained' \r\n                color='secondary' \r\n                onClick={onClickDelete}\r\n                className={classes.deleteBtn}\r\n              >\r\n                  Eliminar\r\n              </Button>\r\n              <Button \r\n                variant='contained' \r\n                color='secondary' \r\n                onClick={onToggleEditMode}\r\n              >\r\n                { state.editMode ? 'Cancelar' : 'Editar' }\r\n              </Button>\r\n            </>\r\n          }\r\n          </div>\r\n        </CardContent>\r\n\r\n      <CardActions disableSpacing className={classes.cardBtn}>\r\n\r\n        {\r\n          (!state.editMode)\r\n          && \r\n          <div>\r\n            <IconButton onClick={onClickLike}>\r\n              <FavoriteIcon className={ post.isLiked ? classes.likeIcon : classes.grayIcon }/>\r\n            </IconButton>\r\n            {post.likeCount}\r\n          </div>\r\n        }\r\n        \r\n        {\r\n          (!state.editMode)\r\n          && \r\n          <div>\r\n            <Link to={routes.getPost(post.postID || 1)}>\r\n              <IconButton>\r\n                <QuestionAnswerIcon className={classes.commentIcon}/>\r\n              </IconButton>\r\n            </Link>\r\n            {post.replyCount}\r\n          </div>\r\n        }\r\n        \r\n        {\r\n          (!state.editMode)\r\n          && \r\n          <div>\r\n            <IconButton onClick={onClickRepost}>\r\n              <ReplyAllIcon className={ post.isReposted ? classes.repostIcon : classes.grayIcon }/>\r\n            </IconButton>\r\n            {post.repostCount}\r\n          </div>\r\n        }\r\n\r\n        {\r\n          (authenticationService.currentUserValue.id === post.publisherID && state.editMode)\r\n          && \r\n          <div>\r\n            <IconButton onClick={onClickSave}>\r\n              <SaveIcon className={classes.saveIcon}/>\r\n            </IconButton>\r\n          </div>\r\n        }\r\n\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default PostCard;","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Post\\CreateReplyForm.js",["373"],"import React,{useState, useEffect, useRef} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Image as ImageIcon\r\n} from '@material-ui/icons';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n} from '@material-ui/core';\r\n\r\nimport { FormMediaGrid }            from 'components/Media';\r\n\r\nimport { handleResponse }           from '_helpers';\r\nimport { authenticationService }    from '_services';\r\nimport { \r\n  fileToBase64,\r\n   validateCreateAndUpdatePost \r\n} from '_utils';\r\nimport { createReply }              from '_api';\r\n\r\nimport {CReplyModel}     from '_model';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    background:     'white',\r\n    width:          '100%',\r\n    maxWidth:       '600px',\r\n    height:         '40%',\r\n    padding:        theme.spacing( 3 ),\r\n    borderRadius:   theme.spacing( 0, 0, 1, 1),  \r\n    marginBottom:   theme.spacing( 2 ),\r\n    boxShadow:      'black 1px 1px 8px',\r\n    alignItems:     'center',\r\n    justifySelf:    'center',\r\n    alignSelf:      'center',\r\n    marginLeft:     'auto',\r\n    marginRight:    'auto',\r\n    zIndex:         1,\r\n  },\r\n  cardBtn: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    color: 'white',\r\n    alignSelf:'center',\r\n  },\r\n  submit: {\r\n    order: 0,\r\n    width: '20%',\r\n    [theme.breakpoints.down('sm')]:{\r\n      order: 1,\r\n      width: '100%',\r\n      flexGrow: '1',\r\n      flexShrink: '0',\r\n      flexBasis: 'auto',\r\n    }\r\n  },\r\n  imageIcon: {\r\n    order: 1,\r\n    [theme.breakpoints.down('sm')]:{\r\n      order: 0,\r\n      flexGrow: '1',\r\n      flexShrink: '0',\r\n      flexBasis: 'auto',\r\n    }\r\n  },\r\n  titleForm: {\r\n    justifyContent: 'space-around',\r\n    color: theme.palette.primary.dark ,\r\n    alignSelf:'center',\r\n    color:'#ea5970',\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  \r\n}));\r\n\r\nexport const CreateReplyForm = (props) => {\r\n\r\n  const {postId, setReplies} = props;\r\n  \r\n  const [images, setImages]   = useState( [] );\r\n  const [content, setContent] = useState( '' );\r\n\r\n  const [validation, setValidation] = useState({\r\n    content:    false,\r\n    mediaCount: false,\r\n    validated:  false\r\n  });\r\n\r\n  useEffect(() => {\r\n    setValidation( validateCreateAndUpdatePost( {content, mediaCount: images.length}) );\r\n  }, [images, content])\r\n\r\n  const inputFileRef = useRef(null);\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const onSubmit = async ( e )=>{\r\n    e.preventDefault();\r\n\r\n    const model = new CReplyModel({\r\n        userID: authenticationService.currentUserValue.id,\r\n        postID: postId, \r\n        content,\r\n        files: images.map(x=>x.file)});\r\n\r\n    createReply( model )\r\n          .then(handleResponse)\r\n          .then( res =>{\r\n            let { data } = res;\r\n            setImages ([]);\r\n            setContent('');\r\n            setReplies( data );\r\n          })\r\n          .catch( console.warn );\r\n  };\r\n\r\n  const onChangeImage = async ( e )=>{\r\n    let { files } = e.target;\r\n\r\n    if( images.length + files.length > 4 )\r\n      return;\r\n\r\n    const filePairs = [];\r\n    for ( let i = 0; i < files.length; i++ ){\r\n      let file = files[i];\r\n      let preview = await fileToBase64( file );\r\n      filePairs.push( {\r\n        file,\r\n        preview\r\n      });\r\n    }\r\n\r\n    setImages( x=> [...x,...filePairs] );\r\n  };\r\n  \r\n  const onChangeContent = e=>setContent(e.target.value);\r\n  \r\n  const mediaBtnOnClick = () =>inputFileRef.current?.click();\r\n\r\n  return (\r\n    <form \r\n      className={classes.form} \r\n      noValidate \r\n      onSubmit={onSubmit}\r\n    >\r\n        <div \r\n          component='h4' \r\n          variant='h2' \r\n          className={classes.titleForm}\r\n        >\r\n          <strong>Nueva Respuesta!</strong>\r\n        </div>\r\n        <TextField\r\n            variant      = 'outlined'\r\n            margin       = 'normal'\r\n            multiline\r\n            rows         = {3}\r\n            rowsMax      = {3}\r\n            fullWidth\r\n            label        = 'Escribir...'\r\n            name         = 'postContent'\r\n            autoComplete = 'postContent'\r\n            autoFocus\r\n            value        = {content}\r\n            className    = {classes.postContent}\r\n            onChange     = {onChangeContent}\r\n        />\r\n\r\n      <FormMediaGrid images={images} setImages={setImages}/>\r\n      <div className = {classes.cardBtn}>\r\n      \r\n        <Button\r\n            type     = 'submit'\r\n            fullWidth\r\n            variant  = 'contained'\r\n            color    = 'primary'\r\n            className= {classes.submit}\r\n            disabled = {!validation.validated}\r\n        >\r\n          Publicar\r\n        </Button>\r\n          \r\n        <input \r\n          accept='image/*' \r\n          className={classes.input} \r\n          type='file' \r\n          multiple \r\n          ref={inputFileRef} \r\n          onChange={onChangeImage}\r\n        />\r\n        <label\r\n          htmlFor='icon-button-file' \r\n          className={classes.imageIcon}\r\n        >\r\n          <IconButton\r\n            color='primary' \r\n            aria-label='upload picture' \r\n            component='span' \r\n            onClick={mediaBtnOnClick}\r\n          >\r\n            <ImageIcon className={classes.imageIcon}/>\r\n          </IconButton>\r\n        </label>\r\n        \r\n        </div>\r\n    </form>\r\n  );\r\n}\r\nexport default CreateReplyForm;","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_hooks\\useMakeSearch.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Profile\\ProfileCard.js",["374"],"import React from 'react';\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles }   from '@material-ui/core/styles';\r\n\r\nimport { DialogEditInfo, EditInfo }   from 'components/EditProfile';\r\n\r\nimport { createFollow, deleteFollow } from '_api';\r\nimport { handleResponse }             from '_helpers';\r\nimport { authenticationService}       from '_services';\r\nimport { FollowViewModel }            from '_model';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardContainer: {\r\n    position:       'absolute',\r\n    display:        'flex',\r\n    top:            theme.spacing( 48.66 ),\r\n    width:          '23%',\r\n    flexDirection:  'column',\r\n    alignContent:   'center',\r\n    alignItems:     'center',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('md')]:{\r\n      width:      '27%',\r\n    },\r\n    [theme.breakpoints.down('sm')]:{\r\n      width:      'auto',\r\n      top:        theme.spacing( 30 ),\r\n      left:       '50%',\r\n      transform:  'translateX(-50%)'\r\n    }\r\n  },\r\n  card: {\r\n    padding:          theme.spacing(2),\r\n    marginBottom:     theme.spacing(5),\r\n    backgroundColor:  '#ea5970',\r\n    borderRadius:     '10px',\r\n    zIndex: '10'\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  cardBtn: {\r\n    padding:        '0',\r\n    margin:         '0',\r\n    alignItems:     'center',\r\n    justifyContent: 'space-between',\r\n    color:          'white',\r\n  },\r\n  title: {\r\n    color:    'white',\r\n    fontSize: '1.1rem'\r\n  },\r\n  secondaryTitle: {\r\n    color:    'white',\r\n    fontSize: '0.8rem'\r\n    \r\n  },\r\n  content: {\r\n    color:          'white',\r\n    marginLeft:     theme.spacing(7),\r\n    marginBottom:   theme.spacing(1),\r\n  },\r\n  followContainer:{\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  layTitle:{\r\n    display: 'inline-flex'\r\n  },\r\n  profilePicture:{\r\n    width:        150,\r\n    height:       150,\r\n    objectFit:    'cover',\r\n    borderRadius: '50%',\r\n    backgroundColor: '#333333'\r\n  },\r\n  contImg:{\r\n    alignItems: 'center',\r\n    textAlign:  'center',\r\n  },\r\n  followNum:{\r\n    alignItems: 'center',\r\n    textAlign:  'center',\r\n  }\r\n}));\r\n\r\nconst profilePicPlaceholder = 'https://image.freepik.com/vector-gratis/perfil-avatar-hombre-icono-redondo_24640-14044.jpg';\r\n\r\nexport const ProfileCard = ( props ) => {\r\n  const { user, setUser } = props;\r\n  const classes = useStyles();\r\n\r\n  const OnClickFollowButton = ()=>{\r\n    const model = new FollowViewModel({\r\n      followedID: user.id,\r\n      followerID: authenticationService.currentUserValue.id });\r\n    \r\n    if( user.isFollowed ){\r\n      deleteFollow( model )\r\n      .then( handleResponse )\r\n      .then( res =>{\r\n        const { data } = res;\r\n        setUser( data );\r\n      })\r\n      .catch( console.warn );\r\n    }else{\r\n      createFollow( model )\r\n      .then( handleResponse )\r\n      .then( res =>{\r\n        const { data } = res;\r\n        setUser( data );\r\n      })\r\n      .catch( console.warn );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.cardContainer}>\r\n      <Card className={classes.card}>\r\n          \r\n        <CardContent>\r\n          <div className={classes.displayTitle}>\r\n          </div>\r\n          <div className={classes.contImg}>\r\n            <img className={classes.profilePicture} src={ user.profilePicPath || profilePicPlaceholder }/>\r\n            <Typography variant='h6' component='h2' className={classes.title}>\r\n              <strong>{user.userName} {'@'+user.tag}</strong>\r\n            </Typography>\r\n          </div>\r\n        </CardContent>\r\n          \r\n        <div className={classes.followContainer}>\r\n          <Typography component='h2' className={classes.secondaryTitle}>\r\n            Followers - {user.followerCount}\r\n          </Typography>\r\n          <Typography component='h2' className={classes.secondaryTitle}>\r\n            Following - {user.followingCount}\r\n          </Typography>\r\n        </div>\r\n\r\n        <CardActions disableSpacing className={classes.cardBtn}>\r\n\r\n        {\r\n          (authenticationService.currentUserValue.id !== user.id) \r\n          &&\r\n          <div>\r\n            <Button\r\n              fullWidth\r\n              variant='contained'\r\n              color='secondary'\r\n              className={classes.submit}\r\n              onClick={OnClickFollowButton}\r\n            >\r\n              { user.isFollowed ? 'Dejar de Seguir' : 'Seguir'}\r\n            </Button>\r\n          </div>\r\n        }\r\n\r\n        {\r\n          (authenticationService.currentUserValue.id === user.id) \r\n          &&\r\n          <DialogEditInfo color={'primary'}>\r\n            <EditInfo user={user} setUser={setUser}/>\r\n          </DialogEditInfo>\r\n        }\r\n          \r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileCard;\r\n","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\_hooks\\useGetDetailedPost.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Inicio\\PostContainer.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\Registro\\Signup.js",["375","376","377","378"],"import React,{ useState, useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    CssBaseline,\r\n    TextField,\r\n    FormControlLabel,\r\n    Link,\r\n    Grid,\r\n    Box,\r\n    Typography,\r\n    Container,\r\n}from  '@material-ui/core';\r\n\r\nimport { \r\n  AccessibilityNewRounded as AccessibilityNewRoundedIcon \r\n} from '@material-ui/icons';\r\n\r\nimport { handleResponse } from '_helpers';\r\nimport { validateSignup } from '_utils';\r\nimport { createUser }     from '_api';\r\n\r\nimport { SignUpModel }    from '_model';\r\nimport { authenticationService } from '_services';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', \r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  fieldWarning:{\r\n    color: '#ea5970',\r\n    fontSize: '0.8rem',\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport const SignUp = (props)=>{\r\n\r\n  const { handleClose } = props;\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n      userName: '',\r\n      tag: '',\r\n      email: '',\r\n      password:''\r\n  });\r\n\r\n  const [ validation, setValidation] = useState({\r\n    userName:   false,\r\n    tag:        false,\r\n    email:      false,\r\n    password:   false,\r\n    validated:  false,\r\n  });\r\n\r\n  const OnChangeInput = (e) =>{\r\n    setState({\r\n      ...state,\r\n      [e.target.name] : e.target.value\r\n    });\r\n  }\r\n\r\n  const onSubmit = (e) =>{\r\n    \r\n    e.preventDefault();\r\n\r\n    const model = new SignUpModel(state);\r\n\r\n    createUser(model)\r\n    .then( handleResponse)\r\n    .then( handleClose )\r\n    .catch(console.warn)\r\n    .then( handleClose );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setValidation( validateSignup( state ) );\r\n  }, [state]);\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n\r\n        <Avatar className={classes.avatar}>\r\n          <AccessibilityNewRoundedIcon/>\r\n        </Avatar>\r\n\r\n        <Typography component='h2' variant='h5'>\r\n          <strong>Regístrate</strong>\r\n        </Typography>\r\n\r\n        <Typography variant='body2'>\r\n          Únete a la nueva comunidad de PosThis\r\n        </Typography>\r\n\r\n        <form className={classes.form} noValidate onSubmit = {onSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete='fname'\r\n                name='userName'\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                label='Username'\r\n                autoFocus\r\n                onChange = {OnChangeInput}\r\n              />\r\n              {\r\n                !validation.userName\r\n                && \r\n                <Typography variant='body2' className={classes.fieldWarning}>\r\n                * Nombre de usuario no valido\r\n                </Typography>\r\n              }\r\n            </Grid>\r\n            \r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                label='Tag'\r\n                name='tag'\r\n                autoComplete='tagname'\r\n                onChange = {OnChangeInput}\r\n              />\r\n              {\r\n                !validation.tag\r\n                && \r\n                <Typography variant='body2' className={classes.fieldWarning}>\r\n                * Tag no valido\r\n                </Typography>\r\n              }\r\n            </Grid>\r\n            \r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                id='email'\r\n                label='Email'\r\n                name='email'\r\n                autoComplete='email'\r\n                onChange = {OnChangeInput}\r\n              />\r\n              {\r\n                !validation.email\r\n                && \r\n                <Typography variant='body2' className={classes.fieldWarning}>\r\n                * Email no valido\r\n                </Typography>\r\n              }\r\n            </Grid>\r\n            \r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                name='password'\r\n                label='Contraseña'\r\n                type='password'\r\n                autoComplete='current-password'\r\n                onChange = {OnChangeInput}\r\n              />\r\n              {\r\n                !validation.password \r\n                &&\r\n                <Typography variant='body2' className={classes.fieldWarning}>\r\n                * Contraseña no valida\r\n                </Typography>\r\n              }\r\n            </Grid>\r\n           \r\n          </Grid>\r\n\r\n          <Button\r\n            type='submit'\r\n            fullWidth\r\n            variant='contained'\r\n            color='secondary'\r\n            className={classes.submit}\r\n            disabled = {!validation.validated}\r\n          >\r\n            Regístrate ahora\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      \r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default  SignUp;","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\EditProfile\\index.js",[],"D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\EditProfile\\DialogEditInfo.js",["379","380"],"import React,{ Children, cloneElement } from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Dialog,\r\n  DialogTitle as MuiDialogTitle,\r\n  DialogContent as MuiDialogContent,\r\n  DialogActions as MuiDialogActions,\r\n  IconButton,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  Close as CloseIcon,\r\n  Settings as SettingsIcon\r\n} from '@material-ui/icons';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  \r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant='h6'>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label='close' className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport const DialogEditInfo = ({children, color}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const childrenWithProps = Children.map(children, (child, index) => {\r\n    return cloneElement(child, {\r\n      handleClose,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <IconButton  \r\n          aria-label='upload picture'\r\n          component ='span' \r\n          variant   ='contained' \r\n          color     ={ color || 'secondary' } \r\n          onClick   ={handleClickOpen}>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n      <Dialog onClose={handleClose} aria-labelledby='customized-dialog-title' open={open}>\r\n        <DialogContent dividers>\r\n            {childrenWithProps}\r\n        </DialogContent>\r\n        \r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogEditInfo","D:\\Repositories\\Visual C++\\PosThis-React-app\\src\\components\\EditProfile\\EditInfo.js",["381","382","383"],"import React,{ useState, useEffect, useRef } from 'react';\r\n\r\nimport {\r\n    Button,\r\n    CssBaseline,\r\n    TextField,\r\n    Grid,\r\n    Typography,\r\n    Container,\r\n    IconButton,\r\n}from  '@material-ui/core';\r\n\r\nimport {\r\n  Image as ImageIcon,\r\n  AccountCircle\r\n}from '@material-ui/icons'\r\n\r\nimport { makeStyles }     from '@material-ui/core/styles';\r\n\r\nimport { updateUser }                           from '_api';\r\nimport { fileToBase64, validateUpdateUser }     from '_utils';\r\nimport { handleResponse }                       from '_helpers';\r\nimport { authenticationService }                from '_services';    \r\n\r\nimport { UpdateUserViewModel }                  from '_model';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%', \r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  input:{\r\n    display: 'none',\r\n  },\r\n  profilePicture:{\r\n    width:            '100px',\r\n    height:           '100px',\r\n    objectFit:        'cover',\r\n    borderRadius:     '50%',\r\n    backgroundColor:  '#333333'\r\n  },\r\n  backgroundPicture:{\r\n    width:            '100%',\r\n    height:           '150px',\r\n    objectFit:        'cover',\r\n    borderRadius:     theme.spacing(0, 0, 2, 2),\r\n    \r\n    marginTop:theme.spacing(3),\r\n  },\r\n  pictures: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  userIcon:{\r\n    color: '#ea5970',\r\n    margin: theme.spacing(1),\r\n  },\r\n  inputImage:{\r\n    display: 'none'\r\n  },\r\n  fieldWarning:{\r\n    color: '#ea5970',\r\n    fontSize: '0.8rem',\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst defaultProfilePic = 'https://image.freepik.com/vector-gratis/perfil-avatar-hombre-icono-redondo_24640-14044.jpg';\r\nconst defaultCoverPic   = 'https://png.pngtree.com/thumb_back/fw800/background/20190220/ourmid/pngtree-blue-gradient-summer-creative-image_9270.jpg';\r\n\r\nexport const EditInfo = ( props ) => {\r\n\r\n  const { user, setUser, handleClose } = props;\r\n\r\n  const classes           = useStyles();\r\n\r\n  const inputProfileRef   = useRef();\r\n  const inputCoverRef     = useRef();\r\n\r\n  const [state, setState] = useState({\r\n    userName:           user.userName,\r\n    tag:                user.tag,\r\n    email:              user.email,\r\n    changedProfilePic:  false,\r\n    profilePic:         null,\r\n    profilePicPreview:  user.profilePicPath,\r\n    changedCoverPic:    false,\r\n    coverPic:           null,\r\n    coverPicPreview:    user.coverPicPath,\r\n  });\r\n\r\n  const [validation, setValidation]= useState({\r\n    userName:   false,\r\n    tag:        false,\r\n    email:      false,\r\n    validated:  false,\r\n  });\r\n\r\n  useEffect(()=>{\r\n    setValidation( validateUpdateUser( state ) );\r\n  },[state]);\r\n\r\n  const onChangeTextField = e=>{\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const onChangeProfilePic = async (e) => {\r\n    let file = e.target.files[0];\r\n\r\n    if( !file )\r\n      return;\r\n\r\n    let url  = await fileToBase64(file);\r\n    setState( x=>{\r\n      let copy = {...x};\r\n      copy.profilePicPreview = url;\r\n      copy.changedProfilePic = true;\r\n      copy.profilePic        = file;\r\n      return copy;\r\n    })\r\n  };\r\n\r\n  const onChangeCoverPic   = async (e) => {\r\n    let file = e.target.files[0];\r\n\r\n    if( !file )\r\n      return;\r\n      \r\n    let url  = await fileToBase64(file);\r\n    setState( x=>{\r\n      let copy = {...x};\r\n      copy.coverPicPreview = url;\r\n      copy.changedCoverPic = true;\r\n      copy.coverPic        = file;\r\n      return copy;\r\n    })\r\n  };\r\n\r\n  const onClickProfilePic = () => inputProfileRef.current?.click();\r\n \r\n  const onClickCoverPic   = () => inputCoverRef  .current?.click();\r\n\r\n  const onSubmit = e=>{\r\n    e.preventDefault();\r\n\r\n    let model = new UpdateUserViewModel(state);\r\n\r\n    updateUser(authenticationService.currentUserValue.id, model)\r\n      .then( handleResponse )\r\n      .then( res =>{\r\n        const { data } = res;\r\n        setUser( data );\r\n        handleClose();\r\n        authenticationService.logout();\r\n      })\r\n      .catch( console.warn );\r\n  };\r\n  \r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n\r\n        <AccountCircle className={classes.userIcon}/>\r\n\r\n        <Typography component='h1' variant='h5'>\r\n          <strong>Mi Perfil</strong>\r\n        </Typography>\r\n\r\n        <Typography variant='body2'>\r\n          Actualizar información.\r\n        </Typography>\r\n\r\n        <form className={classes.form} onSubmit={onSubmit} noValidate>\r\n\r\n          <Grid container spacing={2}>\r\n\r\n            <Grid item xs={12} className={classes.pictures}>\r\n              <img className={classes.profilePicture} src={ state.profilePicPreview || defaultProfilePic}/>\r\n            </Grid>\r\n           \r\n            <Grid item xs={12}   className={classes.pictures}>\r\n              <input \r\n                accept='image/*' \r\n                className={classes.input} \r\n                type='file' ref={inputProfileRef} \r\n                onChange={onChangeProfilePic}\r\n              />\r\n              <label htmlFor='profile-button-file'> Foto de perfil\r\n                <IconButton \r\n                 color='secondary' \r\n                 aria-label='upload picture' \r\n                 component='span' \r\n                 onClick={onClickProfilePic}\r\n                >\r\n                  <ImageIcon className={classes.imageIcon}/>\r\n                </IconButton>\r\n              </label>\r\n            </Grid>\r\n          \r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                name='userName'\r\n                autoComplete='fname'\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                value={state.userName}\r\n                onChange={onChangeTextField}\r\n                label='Usuario'\r\n                autoFocus\r\n              />\r\n              {\r\n                !validation.userName\r\n                && \r\n                <Typography variant='body2' className={classes.fieldWarning}>\r\n                * Nombre de Usuario no valido\r\n                </Typography>\r\n              }\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                name='tag'\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                label='Tag'\r\n                value={state.tag}\r\n                onChange={onChangeTextField}\r\n                autoComplete='tagname'\r\n              />\r\n              {\r\n                !validation.tag\r\n                && \r\n                <Typography variant='body2' className={classes.fieldWarning}>\r\n                * Tag no valido\r\n                </Typography>\r\n              }\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name='email'\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                label='Email'\r\n                value={state.email}\r\n                onChange = {onChangeTextField}\r\n                autoComplete='email'\r\n              />\r\n              {\r\n                !validation.email\r\n                && \r\n                <Typography variant='body2' className={classes.fieldWarning}>\r\n                * Email no valido\r\n                </Typography>\r\n              }\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.pictures}>\r\n              <img className={classes.backgroundPicture} src={ state.coverPicPreview || defaultCoverPic }/>\r\n            </Grid>\r\n    \r\n            <Grid item xs={12} className={classes.pictures}>\r\n              <input \r\n               accept='image/*' \r\n               className={classes.input} \r\n               type='file' \r\n               ref={inputCoverRef} \r\n               onChange={onChangeCoverPic}\r\n              />\r\n              <label htmlFor='background-button-file'> Foto de portada\r\n                <IconButton \r\n                 color='secondary' \r\n                 aria-label='upload picture' \r\n                 component='span' \r\n                 onClick={onClickCoverPic}\r\n                >\r\n                  <ImageIcon className={classes.imageIcon}/>\r\n                </IconButton>\r\n              </label>\r\n            </Grid>\r\n\r\n          </Grid>\r\n\r\n          <Button\r\n            type      ='submit'\r\n            fullWidth\r\n            variant   ='contained'\r\n            color     ='primary'\r\n            className ={classes.submit}\r\n            disabled  = {!validation.validated}\r\n          >\r\n            Guardar información\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      \r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default  EditInfo;",{"ruleId":"384","severity":1,"message":"385","line":1,"column":26,"nodeType":"386","messageId":"387","endLine":1,"endColumn":35},{"ruleId":"384","severity":1,"message":"388","line":6,"column":3,"nodeType":"386","messageId":"387","endLine":6,"endColumn":19},{"ruleId":"384","severity":1,"message":"389","line":8,"column":3,"nodeType":"386","messageId":"387","endLine":8,"endColumn":7},{"ruleId":"384","severity":1,"message":"390","line":12,"column":3,"nodeType":"386","messageId":"387","endLine":12,"endColumn":11},{"ruleId":"384","severity":1,"message":"391","line":55,"column":11,"nodeType":"386","messageId":"387","endLine":55,"endColumn":16},{"ruleId":"392","severity":1,"message":"393","line":70,"column":7,"nodeType":"394","endLine":70,"endColumn":9,"suggestions":"395"},{"ruleId":"384","severity":1,"message":"396","line":55,"column":30,"nodeType":"386","messageId":"387","endLine":55,"endColumn":34},{"ruleId":"384","severity":1,"message":"397","line":59,"column":25,"nodeType":"386","messageId":"387","endLine":59,"endColumn":32},{"ruleId":"398","severity":1,"message":"399","line":61,"column":10,"nodeType":"400","messageId":"401","endLine":61,"endColumn":12},{"ruleId":"398","severity":1,"message":"399","line":33,"column":10,"nodeType":"400","messageId":"401","endLine":33,"endColumn":12},{"ruleId":"402","severity":1,"message":"403","line":7,"column":21,"nodeType":"404","messageId":"405","endLine":7,"endColumn":22,"suggestions":"406"},{"ruleId":"402","severity":1,"message":"407","line":7,"column":81,"nodeType":"404","messageId":"405","endLine":7,"endColumn":82,"suggestions":"408"},{"ruleId":"409","severity":1,"message":"410","line":11,"column":11,"nodeType":"411","messageId":"412","endLine":11,"endColumn":30,"fix":"413"},{"ruleId":"409","severity":1,"message":"410","line":35,"column":11,"nodeType":"411","messageId":"412","endLine":35,"endColumn":30,"fix":"414"},{"ruleId":"409","severity":1,"message":"410","line":40,"column":11,"nodeType":"411","messageId":"412","endLine":40,"endColumn":25,"fix":"415"},{"ruleId":"409","severity":1,"message":"410","line":45,"column":11,"nodeType":"411","messageId":"412","endLine":45,"endColumn":27,"fix":"416"},{"ruleId":"409","severity":1,"message":"410","line":50,"column":11,"nodeType":"411","messageId":"412","endLine":50,"endColumn":30,"fix":"417"},{"ruleId":"409","severity":1,"message":"410","line":67,"column":11,"nodeType":"411","messageId":"412","endLine":67,"endColumn":30,"fix":"418"},{"ruleId":"409","severity":1,"message":"410","line":72,"column":11,"nodeType":"411","messageId":"412","endLine":72,"endColumn":25,"fix":"419"},{"ruleId":"409","severity":1,"message":"410","line":77,"column":11,"nodeType":"411","messageId":"412","endLine":77,"endColumn":27,"fix":"420"},{"ruleId":"384","severity":1,"message":"421","line":6,"column":10,"nodeType":"386","messageId":"387","endLine":6,"endColumn":21},{"ruleId":"384","severity":1,"message":"422","line":6,"column":23,"nodeType":"386","messageId":"387","endLine":6,"endColumn":33},{"ruleId":"384","severity":1,"message":"423","line":6,"column":35,"nodeType":"386","messageId":"387","endLine":6,"endColumn":53},{"ruleId":"384","severity":1,"message":"424","line":6,"column":55,"nodeType":"386","messageId":"387","endLine":6,"endColumn":74},{"ruleId":"384","severity":1,"message":"425","line":25,"column":7,"nodeType":"386","messageId":"387","endLine":25,"endColumn":18},{"ruleId":"384","severity":1,"message":"426","line":45,"column":7,"nodeType":"386","messageId":"387","endLine":45,"endColumn":20},{"ruleId":"384","severity":1,"message":"427","line":6,"column":3,"nodeType":"386","messageId":"387","endLine":6,"endColumn":13},{"ruleId":"384","severity":1,"message":"428","line":10,"column":3,"nodeType":"386","messageId":"387","endLine":10,"endColumn":9},{"ruleId":"384","severity":1,"message":"429","line":13,"column":16,"nodeType":"386","messageId":"387","endLine":13,"endColumn":24},{"ruleId":"430","severity":1,"message":"431","line":123,"column":15,"nodeType":"432","endLine":123,"endColumn":89},{"ruleId":"392","severity":1,"message":"433","line":78,"column":5,"nodeType":"394","endLine":78,"endColumn":11,"suggestions":"434"},{"ruleId":"430","severity":1,"message":"431","line":90,"column":11,"nodeType":"432","endLine":90,"endColumn":93},{"ruleId":"435","severity":1,"message":"436","line":73,"column":5,"nodeType":"437","messageId":"401","endLine":73,"endColumn":10},{"ruleId":"384","severity":1,"message":"438","line":4,"column":8,"nodeType":"386","messageId":"387","endLine":4,"endColumn":23},{"ruleId":"384","severity":1,"message":"439","line":14,"column":7,"nodeType":"386","messageId":"387","endLine":14,"endColumn":19},{"ruleId":"384","severity":1,"message":"440","line":4,"column":10,"nodeType":"386","messageId":"387","endLine":4,"endColumn":21},{"ruleId":"384","severity":1,"message":"441","line":4,"column":23,"nodeType":"386","messageId":"387","endLine":4,"endColumn":34},{"ruleId":"430","severity":1,"message":"431","line":89,"column":10,"nodeType":"432","endLine":89,"endColumn":62},{"ruleId":"442","severity":1,"message":"443","line":108,"column":3,"nodeType":"444","messageId":"445","endLine":118,"endColumn":4},{"ruleId":"384","severity":1,"message":"446","line":51,"column":27,"nodeType":"386","messageId":"387","endLine":51,"endColumn":32},{"ruleId":"384","severity":1,"message":"447","line":52,"column":20,"nodeType":"386","messageId":"387","endLine":52,"endColumn":24},{"ruleId":"398","severity":1,"message":"448","line":56,"column":52,"nodeType":"400","messageId":"401","endLine":56,"endColumn":54},{"ruleId":"430","severity":1,"message":"431","line":64,"column":7,"nodeType":"432","endLine":64,"endColumn":60},{"ruleId":"384","severity":1,"message":"449","line":4,"column":8,"nodeType":"386","messageId":"387","endLine":4,"endColumn":21},{"ruleId":"384","severity":1,"message":"450","line":3,"column":10,"nodeType":"386","messageId":"387","endLine":3,"endColumn":25},{"ruleId":"384","severity":1,"message":"451","line":17,"column":15,"nodeType":"386","messageId":"387","endLine":17,"endColumn":27},{"ruleId":"384","severity":1,"message":"452","line":18,"column":21,"nodeType":"386","messageId":"387","endLine":18,"endColumn":39},{"ruleId":"384","severity":1,"message":"453","line":19,"column":21,"nodeType":"386","messageId":"387","endLine":19,"endColumn":33},{"ruleId":"384","severity":1,"message":"454","line":28,"column":26,"nodeType":"386","messageId":"387","endLine":28,"endColumn":33},{"ruleId":"409","severity":1,"message":"455","line":244,"column":7,"nodeType":"411","messageId":"412","endLine":244,"endColumn":26,"fix":"456"},{"ruleId":"409","severity":1,"message":"455","line":245,"column":7,"nodeType":"411","messageId":"412","endLine":245,"endColumn":26,"fix":"457"},{"ruleId":"435","severity":1,"message":"458","line":149,"column":3,"nodeType":"437","messageId":"401","endLine":149,"endColumn":8},{"ruleId":"409","severity":1,"message":"455","line":263,"column":7,"nodeType":"411","messageId":"412","endLine":263,"endColumn":26,"fix":"459"},{"ruleId":"409","severity":1,"message":"455","line":264,"column":7,"nodeType":"411","messageId":"412","endLine":264,"endColumn":26,"fix":"460"},{"ruleId":"435","severity":1,"message":"436","line":76,"column":5,"nodeType":"437","messageId":"401","endLine":76,"endColumn":10},{"ruleId":"430","severity":1,"message":"431","line":132,"column":13,"nodeType":"432","endLine":132,"endColumn":107},{"ruleId":"384","severity":1,"message":"388","line":10,"column":5,"nodeType":"386","messageId":"387","endLine":10,"endColumn":21},{"ruleId":"384","severity":1,"message":"389","line":11,"column":5,"nodeType":"386","messageId":"387","endLine":11,"endColumn":9},{"ruleId":"384","severity":1,"message":"461","line":13,"column":5,"nodeType":"386","messageId":"387","endLine":13,"endColumn":8},{"ruleId":"384","severity":1,"message":"462","line":27,"column":10,"nodeType":"386","messageId":"387","endLine":27,"endColumn":31},{"ruleId":"384","severity":1,"message":"425","line":33,"column":7,"nodeType":"386","messageId":"387","endLine":33,"endColumn":18},{"ruleId":"384","severity":1,"message":"426","line":53,"column":7,"nodeType":"386","messageId":"387","endLine":53,"endColumn":20},{"ruleId":"409","severity":1,"message":"463","line":157,"column":35,"nodeType":"411","messageId":"412","endLine":157,"endColumn":58,"fix":"464"},{"ruleId":"430","severity":1,"message":"431","line":195,"column":15,"nodeType":"432","endLine":195,"endColumn":108},{"ruleId":"430","severity":1,"message":"431","line":279,"column":15,"nodeType":"432","endLine":279,"endColumn":108},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Link' is defined but never used.","'Checkbox' is defined but never used.","'match' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["465"],"'rest' is assigned a value but never used.","'setPost' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["466","467"],"Unnecessary escape character: \\-.",["468","469"],"no-whitespace-before-property","Unexpected whitespace before property test.","MemberExpression","unexpectedWhitespace",{"range":"470","text":"471"},{"range":"472","text":"471"},{"range":"473","text":"471"},{"range":"474","text":"471"},{"range":"475","text":"471"},{"range":"476","text":"471"},{"range":"477","text":"471"},{"range":"478","text":"471"},"'SignUpModel' is defined but never used.","'LogInModel' is defined but never used.","'SearchRequestModel' is defined but never used.","'UpdateUserViewModel' is defined but never used.","'DialogTitle' is assigned a value but never used.","'DialogActions' is assigned a value but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'Redirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'loadFeed'. Either include it or remove the dependency array.",["479"],"no-dupe-keys","Duplicate key 'color'.","ObjectExpression","'RepostViewModel' is defined but never used.","'defaultImage' is assigned a value but never used.","'CReplyModel' is defined but never used.","'UReplyModel' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'index' is assigned a value but never used.","'file' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'LikeViewModel' is defined but never used.","'FollowViewModel' is defined but never used.","'FavoriteIcon' is defined but never used.","'QuestionAnswerIcon' is defined but never used.","'ReplyAllIcon' is defined but never used.","'history' is defined but never used.","Unexpected whitespace before property push.",{"range":"480","text":"471"},{"range":"481","text":"471"},"Duplicate key 'media'.",{"range":"482","text":"471"},{"range":"483","text":"471"},"'Box' is defined but never used.","'authenticationService' is defined but never used.","Unexpected whitespace before property current.",{"range":"484","text":"471"},{"desc":"485","fix":"486"},{"messageId":"487","fix":"488","desc":"489"},{"messageId":"490","fix":"491","desc":"492"},{"messageId":"487","fix":"493","desc":"489"},{"messageId":"490","fix":"494","desc":"492"},[270,272],".",[865,867],[1005,1007],[1149,1151],[1291,1293],[1675,1677],[1815,1817],[1959,1961],{"desc":"495","fix":"496"},[6016,6022],[6066,6068],[5968,5974],[6018,6020],[3875,3878],"Update the dependencies array to be: [history]",{"range":"497","text":"498"},"removeEscape",{"range":"499","text":"500"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"501","text":"502"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"503","text":"500"},{"range":"504","text":"502"},"Update the dependencies array to be: [loadFeed, user]",{"range":"505","text":"506"},[1787,1789],"[history]",[141,142],"",[141,141],"\\",[201,202],[201,201],[2055,2061],"[loadFeed, user]"]